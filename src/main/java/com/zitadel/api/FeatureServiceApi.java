/*
 * Zitadel SDK
 * The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.zitadel.api;

import com.fasterxml.jackson.core.type.TypeReference;

import com.zitadel.ApiException;
import com.zitadel.ApiClient;
import com.zitadel.BaseApi;
import com.zitadel.Configuration;
import com.zitadel.Pair;

import com.zitadel.model.RpcStatus;
import com.zitadel.model.V2GetInstanceFeaturesResponse;
import com.zitadel.model.V2GetOrganizationFeaturesResponse;
import com.zitadel.model.V2GetSystemFeaturesResponse;
import com.zitadel.model.V2GetUserFeaturesResponse;
import com.zitadel.model.V2ResetInstanceFeaturesResponse;
import com.zitadel.model.V2ResetOrganizationFeaturesResponse;
import com.zitadel.model.V2ResetSystemFeaturesResponse;
import com.zitadel.model.V2ResetUserFeaturesResponse;
import com.zitadel.model.V2SetInstanceFeaturesRequest;
import com.zitadel.model.V2SetInstanceFeaturesResponse;
import com.zitadel.model.V2SetOrganizationFeaturesResponse;
import com.zitadel.model.V2SetSystemFeaturesRequest;
import com.zitadel.model.V2SetSystemFeaturesResponse;
import com.zitadel.model.V2SetUserFeaturesResponse;


import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.StringJoiner;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class FeatureServiceApi extends BaseApi {

  public FeatureServiceApi() {
    super(Configuration.getDefaultApiClient());
  }

  public FeatureServiceApi(ApiClient apiClient) {
    super(apiClient);
  }

  /**
   * Get instance level features
   * Returns all configured features for an instance. Unset fields mean the feature is the current system default.
   * @param inheritance Inherit unset features from the resource owners. This option is recursive: if the flag is set, the resource&#39;s ancestors are consulted up to system defaults. If this option is disabled and the feature is not set on the instance, it will be omitted from the response or Not Found is returned when the instance has no features flags at all. (optional)
   * @return V2GetInstanceFeaturesResponse
   * @throws ApiException if fails to make API call
   */
  public V2GetInstanceFeaturesResponse getInstanceFeatures(Boolean inheritance) throws ApiException {
    return this.getInstanceFeatures(inheritance, Collections.emptyMap());
  }


  /**
   * Get instance level features
   * Returns all configured features for an instance. Unset fields mean the feature is the current system default.
   * @param inheritance Inherit unset features from the resource owners. This option is recursive: if the flag is set, the resource&#39;s ancestors are consulted up to system defaults. If this option is disabled and the feature is not set on the instance, it will be omitted from the response or Not Found is returned when the instance has no features flags at all. (optional)
   * @param additionalHeaders additionalHeaders for this call
   * @return V2GetInstanceFeaturesResponse
   * @throws ApiException if fails to make API call
   */
  public V2GetInstanceFeaturesResponse getInstanceFeatures(Boolean inheritance, Map<String, String> additionalHeaders) throws ApiException {
    Object localVarPostBody = null;
    
    // create path and map variables
    String localVarPath = "/v2/features/instance";

    StringJoiner localVarQueryStringJoiner = new StringJoiner("&");
    String localVarQueryParameterBaseName;
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    localVarQueryParams.addAll(apiClient.parameterToPair("inheritance", inheritance));
    
    localVarHeaderParams.putAll(additionalHeaders);

    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { "zitadelAccessToken" };

    TypeReference<V2GetInstanceFeaturesResponse> localVarReturnType = new TypeReference<V2GetInstanceFeaturesResponse>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "GET",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarQueryStringJoiner.toString(),
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }

  /**
   * Get organization level features
   * Returns all configured features for an organization. Unset fields mean the feature is the current instance default.
   * @param organizationId  (required)
   * @param inheritance Inherit unset features from the resource owners. This option is recursive: if the flag is set, the resource&#39;s ancestors are consulted up to system defaults. If this option is disabled and the feature is not set on the organization, it will be omitted from the response or Not Found is returned when the organization has no features flags at all. (optional)
   * @return V2GetOrganizationFeaturesResponse
   * @throws ApiException if fails to make API call
   */
  public V2GetOrganizationFeaturesResponse getOrganizationFeatures(String organizationId, Boolean inheritance) throws ApiException {
    return this.getOrganizationFeatures(organizationId, inheritance, Collections.emptyMap());
  }


  /**
   * Get organization level features
   * Returns all configured features for an organization. Unset fields mean the feature is the current instance default.
   * @param organizationId  (required)
   * @param inheritance Inherit unset features from the resource owners. This option is recursive: if the flag is set, the resource&#39;s ancestors are consulted up to system defaults. If this option is disabled and the feature is not set on the organization, it will be omitted from the response or Not Found is returned when the organization has no features flags at all. (optional)
   * @param additionalHeaders additionalHeaders for this call
   * @return V2GetOrganizationFeaturesResponse
   * @throws ApiException if fails to make API call
   */
  public V2GetOrganizationFeaturesResponse getOrganizationFeatures(String organizationId, Boolean inheritance, Map<String, String> additionalHeaders) throws ApiException {
    Object localVarPostBody = null;
    
    // verify the required parameter 'organizationId' is set
    if (organizationId == null) {
      throw new ApiException(400, "Missing the required parameter 'organizationId' when calling getOrganizationFeatures");
    }
    
    // create path and map variables
    String localVarPath = "/v2/features/organization/{organizationId}"
      .replaceAll("\\{" + "organizationId" + "\\}", apiClient.escapeString(apiClient.parameterToString(organizationId)));

    StringJoiner localVarQueryStringJoiner = new StringJoiner("&");
    String localVarQueryParameterBaseName;
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    localVarQueryParams.addAll(apiClient.parameterToPair("inheritance", inheritance));
    
    localVarHeaderParams.putAll(additionalHeaders);

    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { "zitadelAccessToken" };

    TypeReference<V2GetOrganizationFeaturesResponse> localVarReturnType = new TypeReference<V2GetOrganizationFeaturesResponse>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "GET",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarQueryStringJoiner.toString(),
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }

  /**
   * Get system level features
   * Returns all configured features for the system. Unset fields mean the feature is the current system default.
   * @return V2GetSystemFeaturesResponse
   * @throws ApiException if fails to make API call
   */
  public V2GetSystemFeaturesResponse getSystemFeatures() throws ApiException {
    return this.getSystemFeatures(Collections.emptyMap());
  }


  /**
   * Get system level features
   * Returns all configured features for the system. Unset fields mean the feature is the current system default.
   * @param additionalHeaders additionalHeaders for this call
   * @return V2GetSystemFeaturesResponse
   * @throws ApiException if fails to make API call
   */
  public V2GetSystemFeaturesResponse getSystemFeatures(Map<String, String> additionalHeaders) throws ApiException {
    Object localVarPostBody = null;
    
    // create path and map variables
    String localVarPath = "/v2/features/system";

    StringJoiner localVarQueryStringJoiner = new StringJoiner("&");
    String localVarQueryParameterBaseName;
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    
    localVarHeaderParams.putAll(additionalHeaders);

    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { "zitadelAccessToken" };

    TypeReference<V2GetSystemFeaturesResponse> localVarReturnType = new TypeReference<V2GetSystemFeaturesResponse>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "GET",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarQueryStringJoiner.toString(),
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }

  /**
   * Get organization level features
   * Returns all configured features for an organization. Unset fields mean the feature is the current instance default.
   * @param userId  (required)
   * @param inheritance Inherit unset features from the resource owners. This option is recursive: if the flag is set, the resource&#39;s ancestors are consulted up to system defaults. If this option is disabled and the feature is not set on the user, it will be ommitted from the response or Not Found is returned when the user has no features flags at all. (optional)
   * @return V2GetUserFeaturesResponse
   * @throws ApiException if fails to make API call
   */
  public V2GetUserFeaturesResponse getUserFeatures(String userId, Boolean inheritance) throws ApiException {
    return this.getUserFeatures(userId, inheritance, Collections.emptyMap());
  }


  /**
   * Get organization level features
   * Returns all configured features for an organization. Unset fields mean the feature is the current instance default.
   * @param userId  (required)
   * @param inheritance Inherit unset features from the resource owners. This option is recursive: if the flag is set, the resource&#39;s ancestors are consulted up to system defaults. If this option is disabled and the feature is not set on the user, it will be ommitted from the response or Not Found is returned when the user has no features flags at all. (optional)
   * @param additionalHeaders additionalHeaders for this call
   * @return V2GetUserFeaturesResponse
   * @throws ApiException if fails to make API call
   */
  public V2GetUserFeaturesResponse getUserFeatures(String userId, Boolean inheritance, Map<String, String> additionalHeaders) throws ApiException {
    Object localVarPostBody = null;
    
    // verify the required parameter 'userId' is set
    if (userId == null) {
      throw new ApiException(400, "Missing the required parameter 'userId' when calling getUserFeatures");
    }
    
    // create path and map variables
    String localVarPath = "/v2/features/user/{userId}"
      .replaceAll("\\{" + "userId" + "\\}", apiClient.escapeString(apiClient.parameterToString(userId)));

    StringJoiner localVarQueryStringJoiner = new StringJoiner("&");
    String localVarQueryParameterBaseName;
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    localVarQueryParams.addAll(apiClient.parameterToPair("inheritance", inheritance));
    
    localVarHeaderParams.putAll(additionalHeaders);

    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { "zitadelAccessToken" };

    TypeReference<V2GetUserFeaturesResponse> localVarReturnType = new TypeReference<V2GetUserFeaturesResponse>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "GET",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarQueryStringJoiner.toString(),
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }

  /**
   * Reset instance level features
   * Deletes ALL configured features for an instance, reverting the behaviors to system defaults.
   * @return V2ResetInstanceFeaturesResponse
   * @throws ApiException if fails to make API call
   */
  public V2ResetInstanceFeaturesResponse resetInstanceFeatures() throws ApiException {
    return this.resetInstanceFeatures(Collections.emptyMap());
  }


  /**
   * Reset instance level features
   * Deletes ALL configured features for an instance, reverting the behaviors to system defaults.
   * @param additionalHeaders additionalHeaders for this call
   * @return V2ResetInstanceFeaturesResponse
   * @throws ApiException if fails to make API call
   */
  public V2ResetInstanceFeaturesResponse resetInstanceFeatures(Map<String, String> additionalHeaders) throws ApiException {
    Object localVarPostBody = null;
    
    // create path and map variables
    String localVarPath = "/v2/features/instance";

    StringJoiner localVarQueryStringJoiner = new StringJoiner("&");
    String localVarQueryParameterBaseName;
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    
    localVarHeaderParams.putAll(additionalHeaders);

    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { "zitadelAccessToken" };

    TypeReference<V2ResetInstanceFeaturesResponse> localVarReturnType = new TypeReference<V2ResetInstanceFeaturesResponse>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "DELETE",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarQueryStringJoiner.toString(),
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }

  /**
   * Reset organization level features
   * Deletes ALL configured features for an organization, reverting the behaviors to instance defaults.
   * @param organizationId  (required)
   * @return V2ResetOrganizationFeaturesResponse
   * @throws ApiException if fails to make API call
   */
  public V2ResetOrganizationFeaturesResponse resetOrganizationFeatures(String organizationId) throws ApiException {
    return this.resetOrganizationFeatures(organizationId, Collections.emptyMap());
  }


  /**
   * Reset organization level features
   * Deletes ALL configured features for an organization, reverting the behaviors to instance defaults.
   * @param organizationId  (required)
   * @param additionalHeaders additionalHeaders for this call
   * @return V2ResetOrganizationFeaturesResponse
   * @throws ApiException if fails to make API call
   */
  public V2ResetOrganizationFeaturesResponse resetOrganizationFeatures(String organizationId, Map<String, String> additionalHeaders) throws ApiException {
    Object localVarPostBody = null;
    
    // verify the required parameter 'organizationId' is set
    if (organizationId == null) {
      throw new ApiException(400, "Missing the required parameter 'organizationId' when calling resetOrganizationFeatures");
    }
    
    // create path and map variables
    String localVarPath = "/v2/features/organization/{organizationId}"
      .replaceAll("\\{" + "organizationId" + "\\}", apiClient.escapeString(apiClient.parameterToString(organizationId)));

    StringJoiner localVarQueryStringJoiner = new StringJoiner("&");
    String localVarQueryParameterBaseName;
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    
    localVarHeaderParams.putAll(additionalHeaders);

    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { "zitadelAccessToken" };

    TypeReference<V2ResetOrganizationFeaturesResponse> localVarReturnType = new TypeReference<V2ResetOrganizationFeaturesResponse>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "DELETE",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarQueryStringJoiner.toString(),
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }

  /**
   * Reset system level features
   * Deletes ALL configured features for the system, reverting the behaviors to system defaults.
   * @return V2ResetSystemFeaturesResponse
   * @throws ApiException if fails to make API call
   */
  public V2ResetSystemFeaturesResponse resetSystemFeatures() throws ApiException {
    return this.resetSystemFeatures(Collections.emptyMap());
  }


  /**
   * Reset system level features
   * Deletes ALL configured features for the system, reverting the behaviors to system defaults.
   * @param additionalHeaders additionalHeaders for this call
   * @return V2ResetSystemFeaturesResponse
   * @throws ApiException if fails to make API call
   */
  public V2ResetSystemFeaturesResponse resetSystemFeatures(Map<String, String> additionalHeaders) throws ApiException {
    Object localVarPostBody = null;
    
    // create path and map variables
    String localVarPath = "/v2/features/system";

    StringJoiner localVarQueryStringJoiner = new StringJoiner("&");
    String localVarQueryParameterBaseName;
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    
    localVarHeaderParams.putAll(additionalHeaders);

    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { "zitadelAccessToken" };

    TypeReference<V2ResetSystemFeaturesResponse> localVarReturnType = new TypeReference<V2ResetSystemFeaturesResponse>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "DELETE",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarQueryStringJoiner.toString(),
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }

  /**
   * Reset user level features
   * Deletes ALL configured features for a user, reverting the behaviors to organization defaults.
   * @param userId  (required)
   * @return V2ResetUserFeaturesResponse
   * @throws ApiException if fails to make API call
   */
  public V2ResetUserFeaturesResponse resetUserFeatures(String userId) throws ApiException {
    return this.resetUserFeatures(userId, Collections.emptyMap());
  }


  /**
   * Reset user level features
   * Deletes ALL configured features for a user, reverting the behaviors to organization defaults.
   * @param userId  (required)
   * @param additionalHeaders additionalHeaders for this call
   * @return V2ResetUserFeaturesResponse
   * @throws ApiException if fails to make API call
   */
  public V2ResetUserFeaturesResponse resetUserFeatures(String userId, Map<String, String> additionalHeaders) throws ApiException {
    Object localVarPostBody = null;
    
    // verify the required parameter 'userId' is set
    if (userId == null) {
      throw new ApiException(400, "Missing the required parameter 'userId' when calling resetUserFeatures");
    }
    
    // create path and map variables
    String localVarPath = "/v2/features/user/{userId}"
      .replaceAll("\\{" + "userId" + "\\}", apiClient.escapeString(apiClient.parameterToString(userId)));

    StringJoiner localVarQueryStringJoiner = new StringJoiner("&");
    String localVarQueryParameterBaseName;
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    
    localVarHeaderParams.putAll(additionalHeaders);

    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { "zitadelAccessToken" };

    TypeReference<V2ResetUserFeaturesResponse> localVarReturnType = new TypeReference<V2ResetUserFeaturesResponse>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "DELETE",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarQueryStringJoiner.toString(),
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }

  /**
   * Set instance level features
   * Configure and set features that apply to a complete instance. Only fields present in the request are set or unset.
   * @param body  (required)
   * @return V2SetInstanceFeaturesResponse
   * @throws ApiException if fails to make API call
   */
  public V2SetInstanceFeaturesResponse setInstanceFeatures(V2SetInstanceFeaturesRequest body) throws ApiException {
    return this.setInstanceFeatures(body, Collections.emptyMap());
  }


  /**
   * Set instance level features
   * Configure and set features that apply to a complete instance. Only fields present in the request are set or unset.
   * @param body  (required)
   * @param additionalHeaders additionalHeaders for this call
   * @return V2SetInstanceFeaturesResponse
   * @throws ApiException if fails to make API call
   */
  public V2SetInstanceFeaturesResponse setInstanceFeatures(V2SetInstanceFeaturesRequest body, Map<String, String> additionalHeaders) throws ApiException {
    Object localVarPostBody = body;
    
    // verify the required parameter 'body' is set
    if (body == null) {
      throw new ApiException(400, "Missing the required parameter 'body' when calling setInstanceFeatures");
    }
    
    // create path and map variables
    String localVarPath = "/v2/features/instance";

    StringJoiner localVarQueryStringJoiner = new StringJoiner("&");
    String localVarQueryParameterBaseName;
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    
    localVarHeaderParams.putAll(additionalHeaders);

    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { "zitadelAccessToken" };

    TypeReference<V2SetInstanceFeaturesResponse> localVarReturnType = new TypeReference<V2SetInstanceFeaturesResponse>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "PUT",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarQueryStringJoiner.toString(),
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }

  /**
   * Set organization level features
   * Configure and set features that apply to a complete instance. Only fields present in the request are set or unset.
   * @param organizationId  (required)
   * @return V2SetOrganizationFeaturesResponse
   * @throws ApiException if fails to make API call
   */
  public V2SetOrganizationFeaturesResponse setOrganizationFeatures(String organizationId) throws ApiException {
    return this.setOrganizationFeatures(organizationId, Collections.emptyMap());
  }


  /**
   * Set organization level features
   * Configure and set features that apply to a complete instance. Only fields present in the request are set or unset.
   * @param organizationId  (required)
   * @param additionalHeaders additionalHeaders for this call
   * @return V2SetOrganizationFeaturesResponse
   * @throws ApiException if fails to make API call
   */
  public V2SetOrganizationFeaturesResponse setOrganizationFeatures(String organizationId, Map<String, String> additionalHeaders) throws ApiException {
    Object localVarPostBody = null;
    
    // verify the required parameter 'organizationId' is set
    if (organizationId == null) {
      throw new ApiException(400, "Missing the required parameter 'organizationId' when calling setOrganizationFeatures");
    }
    
    // create path and map variables
    String localVarPath = "/v2/features/organization/{organizationId}"
      .replaceAll("\\{" + "organizationId" + "\\}", apiClient.escapeString(apiClient.parameterToString(organizationId)));

    StringJoiner localVarQueryStringJoiner = new StringJoiner("&");
    String localVarQueryParameterBaseName;
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    
    localVarHeaderParams.putAll(additionalHeaders);

    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { "zitadelAccessToken" };

    TypeReference<V2SetOrganizationFeaturesResponse> localVarReturnType = new TypeReference<V2SetOrganizationFeaturesResponse>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "PUT",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarQueryStringJoiner.toString(),
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }

  /**
   * Set system level features
   * Configure and set features that apply to the complete system. Only fields present in the request are set or unset.
   * @param body  (required)
   * @return V2SetSystemFeaturesResponse
   * @throws ApiException if fails to make API call
   */
  public V2SetSystemFeaturesResponse setSystemFeatures(V2SetSystemFeaturesRequest body) throws ApiException {
    return this.setSystemFeatures(body, Collections.emptyMap());
  }


  /**
   * Set system level features
   * Configure and set features that apply to the complete system. Only fields present in the request are set or unset.
   * @param body  (required)
   * @param additionalHeaders additionalHeaders for this call
   * @return V2SetSystemFeaturesResponse
   * @throws ApiException if fails to make API call
   */
  public V2SetSystemFeaturesResponse setSystemFeatures(V2SetSystemFeaturesRequest body, Map<String, String> additionalHeaders) throws ApiException {
    Object localVarPostBody = body;
    
    // verify the required parameter 'body' is set
    if (body == null) {
      throw new ApiException(400, "Missing the required parameter 'body' when calling setSystemFeatures");
    }
    
    // create path and map variables
    String localVarPath = "/v2/features/system";

    StringJoiner localVarQueryStringJoiner = new StringJoiner("&");
    String localVarQueryParameterBaseName;
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    
    localVarHeaderParams.putAll(additionalHeaders);

    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { "zitadelAccessToken" };

    TypeReference<V2SetSystemFeaturesResponse> localVarReturnType = new TypeReference<V2SetSystemFeaturesResponse>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "PUT",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarQueryStringJoiner.toString(),
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }

  /**
   * Set user level features
   * Configure and set features that apply to an user. Only fields present in the request are set or unset.
   * @param userId  (required)
   * @return V2SetUserFeaturesResponse
   * @throws ApiException if fails to make API call
   */
  public V2SetUserFeaturesResponse setUserFeatures(String userId) throws ApiException {
    return this.setUserFeatures(userId, Collections.emptyMap());
  }


  /**
   * Set user level features
   * Configure and set features that apply to an user. Only fields present in the request are set or unset.
   * @param userId  (required)
   * @param additionalHeaders additionalHeaders for this call
   * @return V2SetUserFeaturesResponse
   * @throws ApiException if fails to make API call
   */
  public V2SetUserFeaturesResponse setUserFeatures(String userId, Map<String, String> additionalHeaders) throws ApiException {
    Object localVarPostBody = null;
    
    // verify the required parameter 'userId' is set
    if (userId == null) {
      throw new ApiException(400, "Missing the required parameter 'userId' when calling setUserFeatures");
    }
    
    // create path and map variables
    String localVarPath = "/v2/features/user/{userId}"
      .replaceAll("\\{" + "userId" + "\\}", apiClient.escapeString(apiClient.parameterToString(userId)));

    StringJoiner localVarQueryStringJoiner = new StringJoiner("&");
    String localVarQueryParameterBaseName;
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    
    localVarHeaderParams.putAll(additionalHeaders);

    
    
    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { "zitadelAccessToken" };

    TypeReference<V2SetUserFeaturesResponse> localVarReturnType = new TypeReference<V2SetUserFeaturesResponse>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "PUT",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarQueryStringJoiner.toString(),
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }

  @Override
  public <T> T invokeAPI(String url, String method, Object request, TypeReference<T> returnType, Map<String, String> additionalHeaders) throws ApiException {
    String localVarPath = url.replace(apiClient.getBaseURL(), "");
    StringJoiner localVarQueryStringJoiner = new StringJoiner("&");
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();

    localVarHeaderParams.putAll(additionalHeaders);

    final String[] localVarAccepts = {
      "application/json"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] { "zitadelAccessToken" };

    return apiClient.invokeAPI(
      localVarPath,
        method,
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarQueryStringJoiner.toString(),
        request,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        returnType
    );
  }
}
