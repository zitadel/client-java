/*
 * Zitadel SDK
 * The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zitadel.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.zitadel.model.OIDCServiceBetaPrompt;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * OIDCServiceBetaAuthRequest
 */
@JsonPropertyOrder({
  OIDCServiceBetaAuthRequest.JSON_PROPERTY_ID,
  OIDCServiceBetaAuthRequest.JSON_PROPERTY_CREATION_DATE,
  OIDCServiceBetaAuthRequest.JSON_PROPERTY_CLIENT_ID,
  OIDCServiceBetaAuthRequest.JSON_PROPERTY_SCOPE,
  OIDCServiceBetaAuthRequest.JSON_PROPERTY_REDIRECT_URI,
  OIDCServiceBetaAuthRequest.JSON_PROPERTY_PROMPT,
  OIDCServiceBetaAuthRequest.JSON_PROPERTY_UI_LOCALES,
  OIDCServiceBetaAuthRequest.JSON_PROPERTY_LOGIN_HINT,
  OIDCServiceBetaAuthRequest.JSON_PROPERTY_MAX_AGE,
  OIDCServiceBetaAuthRequest.JSON_PROPERTY_HINT_USER_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class OIDCServiceBetaAuthRequest {
  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nullable
  private String id;

  public static final String JSON_PROPERTY_CREATION_DATE = "creationDate";
  @javax.annotation.Nullable
  private OffsetDateTime creationDate;

  public static final String JSON_PROPERTY_CLIENT_ID = "clientId";
  @javax.annotation.Nullable
  private String clientId;

  public static final String JSON_PROPERTY_SCOPE = "scope";
  @javax.annotation.Nullable
  private List<String> scope = new ArrayList<>();

  public static final String JSON_PROPERTY_REDIRECT_URI = "redirectUri";
  @javax.annotation.Nullable
  private String redirectUri;

  public static final String JSON_PROPERTY_PROMPT = "prompt";
  @javax.annotation.Nullable
  private List<OIDCServiceBetaPrompt> prompt = new ArrayList<>();

  public static final String JSON_PROPERTY_UI_LOCALES = "uiLocales";
  @javax.annotation.Nullable
  private List<String> uiLocales = new ArrayList<>();

  public static final String JSON_PROPERTY_LOGIN_HINT = "loginHint";
  @javax.annotation.Nullable
  private String loginHint;

  public static final String JSON_PROPERTY_MAX_AGE = "maxAge";
  @javax.annotation.Nullable
  private String maxAge;

  public static final String JSON_PROPERTY_HINT_USER_ID = "hintUserId";
  @javax.annotation.Nullable
  private String hintUserId;

  public OIDCServiceBetaAuthRequest() {
  }

  public OIDCServiceBetaAuthRequest id(@javax.annotation.Nullable String id) {
    
    this.id = id;
    return this;
  }

  /**
   * ID of the authorization request
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }

  public OIDCServiceBetaAuthRequest creationDate(@javax.annotation.Nullable OffsetDateTime creationDate) {
    
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Time when the auth request was created
   * @return creationDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreationDate() {
    return creationDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreationDate(@javax.annotation.Nullable OffsetDateTime creationDate) {
    this.creationDate = creationDate;
  }

  public OIDCServiceBetaAuthRequest clientId(@javax.annotation.Nullable String clientId) {
    
    this.clientId = clientId;
    return this;
  }

  /**
   * OIDC client ID of the application that created the auth request
   * @return clientId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClientId() {
    return clientId;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientId(@javax.annotation.Nullable String clientId) {
    this.clientId = clientId;
  }

  public OIDCServiceBetaAuthRequest scope(@javax.annotation.Nullable List<String> scope) {
    
    this.scope = scope;
    return this;
  }

  public OIDCServiceBetaAuthRequest addScopeItem(String scopeItem) {
    if (this.scope == null) {
      this.scope = new ArrayList<>();
    }
    this.scope.add(scopeItem);
    return this;
  }

  /**
   * Requested scopes by the application, which the user must consent to.
   * @return scope
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCOPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getScope() {
    return scope;
  }


  @JsonProperty(JSON_PROPERTY_SCOPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScope(@javax.annotation.Nullable List<String> scope) {
    this.scope = scope;
  }

  public OIDCServiceBetaAuthRequest redirectUri(@javax.annotation.Nullable String redirectUri) {
    
    this.redirectUri = redirectUri;
    return this;
  }

  /**
   * Base URI that points back to the application
   * @return redirectUri
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REDIRECT_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRedirectUri() {
    return redirectUri;
  }


  @JsonProperty(JSON_PROPERTY_REDIRECT_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRedirectUri(@javax.annotation.Nullable String redirectUri) {
    this.redirectUri = redirectUri;
  }

  public OIDCServiceBetaAuthRequest prompt(@javax.annotation.Nullable List<OIDCServiceBetaPrompt> prompt) {
    
    this.prompt = prompt;
    return this;
  }

  public OIDCServiceBetaAuthRequest addPromptItem(OIDCServiceBetaPrompt promptItem) {
    if (this.prompt == null) {
      this.prompt = new ArrayList<>();
    }
    this.prompt.add(promptItem);
    return this;
  }

  /**
   * Prompts that must be displayed to the user
   * @return prompt
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROMPT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<OIDCServiceBetaPrompt> getPrompt() {
    return prompt;
  }


  @JsonProperty(JSON_PROPERTY_PROMPT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrompt(@javax.annotation.Nullable List<OIDCServiceBetaPrompt> prompt) {
    this.prompt = prompt;
  }

  public OIDCServiceBetaAuthRequest uiLocales(@javax.annotation.Nullable List<String> uiLocales) {
    
    this.uiLocales = uiLocales;
    return this;
  }

  public OIDCServiceBetaAuthRequest addUiLocalesItem(String uiLocalesItem) {
    if (this.uiLocales == null) {
      this.uiLocales = new ArrayList<>();
    }
    this.uiLocales.add(uiLocalesItem);
    return this;
  }

  /**
   * End-User&#39;s preferred languages and scripts for the user interface, represented as a list of BCP47 [RFC5646] language tag values, ordered by preference. For instance, the value [fr-CA, fr, en] represents a preference for French as spoken in Canada, then French (without a region designation), followed by English (without a region designation). An error SHOULD NOT result if some or all of the requested locales are not supported.
   * @return uiLocales
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UI_LOCALES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getUiLocales() {
    return uiLocales;
  }


  @JsonProperty(JSON_PROPERTY_UI_LOCALES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUiLocales(@javax.annotation.Nullable List<String> uiLocales) {
    this.uiLocales = uiLocales;
  }

  public OIDCServiceBetaAuthRequest loginHint(@javax.annotation.Nullable String loginHint) {
    
    this.loginHint = loginHint;
    return this;
  }

  /**
   * Login hint can be set by the application with a user identifier such as an email or phone number.
   * @return loginHint
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOGIN_HINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLoginHint() {
    return loginHint;
  }


  @JsonProperty(JSON_PROPERTY_LOGIN_HINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoginHint(@javax.annotation.Nullable String loginHint) {
    this.loginHint = loginHint;
  }

  public OIDCServiceBetaAuthRequest maxAge(@javax.annotation.Nullable String maxAge) {
    
    this.maxAge = maxAge;
    return this;
  }

  /**
   * Specifies the allowable elapsed time in seconds since the last time the End-User was actively authenticated. If the elapsed time is greater than this value, or the field is present with 0 duration, the user must be re-authenticated.
   * @return maxAge
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MAX_AGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMaxAge() {
    return maxAge;
  }


  @JsonProperty(JSON_PROPERTY_MAX_AGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxAge(@javax.annotation.Nullable String maxAge) {
    this.maxAge = maxAge;
  }

  public OIDCServiceBetaAuthRequest hintUserId(@javax.annotation.Nullable String hintUserId) {
    
    this.hintUserId = hintUserId;
    return this;
  }

  /**
   * User ID taken from a ID Token Hint if it was present and valid.
   * @return hintUserId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HINT_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHintUserId() {
    return hintUserId;
  }


  @JsonProperty(JSON_PROPERTY_HINT_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHintUserId(@javax.annotation.Nullable String hintUserId) {
    this.hintUserId = hintUserId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OIDCServiceBetaAuthRequest oiDCServiceBetaAuthRequest = (OIDCServiceBetaAuthRequest) o;
    return Objects.equals(this.id, oiDCServiceBetaAuthRequest.id) &&
        Objects.equals(this.creationDate, oiDCServiceBetaAuthRequest.creationDate) &&
        Objects.equals(this.clientId, oiDCServiceBetaAuthRequest.clientId) &&
        Objects.equals(this.scope, oiDCServiceBetaAuthRequest.scope) &&
        Objects.equals(this.redirectUri, oiDCServiceBetaAuthRequest.redirectUri) &&
        Objects.equals(this.prompt, oiDCServiceBetaAuthRequest.prompt) &&
        Objects.equals(this.uiLocales, oiDCServiceBetaAuthRequest.uiLocales) &&
        Objects.equals(this.loginHint, oiDCServiceBetaAuthRequest.loginHint) &&
        Objects.equals(this.maxAge, oiDCServiceBetaAuthRequest.maxAge) &&
        Objects.equals(this.hintUserId, oiDCServiceBetaAuthRequest.hintUserId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, creationDate, clientId, scope, redirectUri, prompt, uiLocales, loginHint, maxAge, hintUserId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OIDCServiceBetaAuthRequest {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    scope: ").append(toIndentedString(scope)).append("\n");
    sb.append("    redirectUri: ").append(toIndentedString(redirectUri)).append("\n");
    sb.append("    prompt: ").append(toIndentedString(prompt)).append("\n");
    sb.append("    uiLocales: ").append(toIndentedString(uiLocales)).append("\n");
    sb.append("    loginHint: ").append(toIndentedString(loginHint)).append("\n");
    sb.append("    maxAge: ").append(toIndentedString(maxAge)).append("\n");
    sb.append("    hintUserId: ").append(toIndentedString(hintUserId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `id` to the URL query string
    if (getId() != null) {
      try {
        joiner.add(String.format("%sid%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `creationDate` to the URL query string
    if (getCreationDate() != null) {
      try {
        joiner.add(String.format("%screationDate%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCreationDate()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `clientId` to the URL query string
    if (getClientId() != null) {
      try {
        joiner.add(String.format("%sclientId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getClientId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `scope` to the URL query string
    if (getScope() != null) {
      for (int i = 0; i < getScope().size(); i++) {
        try {
          joiner.add(String.format("%sscope%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              URLEncoder.encode(String.valueOf(getScope().get(i)), "UTF-8").replaceAll("\\+", "%20")));
        } catch (UnsupportedEncodingException e) {
          // Should never happen, UTF-8 is always supported
          throw new RuntimeException(e);
        }
      }
    }

    // add `redirectUri` to the URL query string
    if (getRedirectUri() != null) {
      try {
        joiner.add(String.format("%sredirectUri%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRedirectUri()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `prompt` to the URL query string
    if (getPrompt() != null) {
      for (int i = 0; i < getPrompt().size(); i++) {
        if (getPrompt().get(i) != null) {
          try {
            joiner.add(String.format("%sprompt%s%s=%s", prefix, suffix,
                "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
                URLEncoder.encode(String.valueOf(getPrompt().get(i)), "UTF-8").replaceAll("\\+", "%20")));
          } catch (UnsupportedEncodingException e) {
            // Should never happen, UTF-8 is always supported
            throw new RuntimeException(e);
          }
        }
      }
    }

    // add `uiLocales` to the URL query string
    if (getUiLocales() != null) {
      for (int i = 0; i < getUiLocales().size(); i++) {
        try {
          joiner.add(String.format("%suiLocales%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              URLEncoder.encode(String.valueOf(getUiLocales().get(i)), "UTF-8").replaceAll("\\+", "%20")));
        } catch (UnsupportedEncodingException e) {
          // Should never happen, UTF-8 is always supported
          throw new RuntimeException(e);
        }
      }
    }

    // add `loginHint` to the URL query string
    if (getLoginHint() != null) {
      try {
        joiner.add(String.format("%sloginHint%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLoginHint()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `maxAge` to the URL query string
    if (getMaxAge() != null) {
      try {
        joiner.add(String.format("%smaxAge%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMaxAge()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `hintUserId` to the URL query string
    if (getHintUserId() != null) {
      try {
        joiner.add(String.format("%shintUserId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getHintUserId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    return joiner.toString();
  }

}

