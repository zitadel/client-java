/*
 * Zitadel SDK
 * The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zitadel.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * WebKeyServiceBetaDeleteWebKeyResponse
 */
@JsonPropertyOrder({
  WebKeyServiceBetaDeleteWebKeyResponse.JSON_PROPERTY_DELETION_DATE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class WebKeyServiceBetaDeleteWebKeyResponse {
  public static final String JSON_PROPERTY_DELETION_DATE = "deletionDate";
  @javax.annotation.Nullable
  private OffsetDateTime deletionDate;

  public WebKeyServiceBetaDeleteWebKeyResponse() {
  }

  public WebKeyServiceBetaDeleteWebKeyResponse deletionDate(@javax.annotation.Nullable OffsetDateTime deletionDate) {
    
    this.deletionDate = deletionDate;
    return this;
  }

  /**
   * The timestamp of the deletion of the key. Note that the deletion date is only guaranteed to be set if the deletion was successful during the request. In case the deletion occurred in a previous request, the deletion date might be empty.
   * @return deletionDate
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDeletionDate() {
    return deletionDate;
  }


  @JsonProperty(JSON_PROPERTY_DELETION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeletionDate(@javax.annotation.Nullable OffsetDateTime deletionDate) {
    this.deletionDate = deletionDate;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebKeyServiceBetaDeleteWebKeyResponse webKeyServiceBetaDeleteWebKeyResponse = (WebKeyServiceBetaDeleteWebKeyResponse) o;
    return Objects.equals(this.deletionDate, webKeyServiceBetaDeleteWebKeyResponse.deletionDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deletionDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebKeyServiceBetaDeleteWebKeyResponse {\n");
    sb.append("    deletionDate: ").append(toIndentedString(deletionDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `deletionDate` to the URL query string
    if (getDeletionDate() != null) {
      try {
        joiner.add(String.format("%sdeletionDate%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDeletionDate()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    return joiner.toString();
  }

}

