/*
 * merged spec
 * merged spec
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zitadel.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.zitadel.model.V2ImprovedPerformance;
import com.zitadel.model.V2LoginV2;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * V2SetInstanceFeaturesRequest
 */
@JsonPropertyOrder({
  V2SetInstanceFeaturesRequest.JSON_PROPERTY_LOGIN_DEFAULT_ORG,
  V2SetInstanceFeaturesRequest.JSON_PROPERTY_OIDC_TRIGGER_INTROSPECTION_PROJECTIONS,
  V2SetInstanceFeaturesRequest.JSON_PROPERTY_OIDC_LEGACY_INTROSPECTION,
  V2SetInstanceFeaturesRequest.JSON_PROPERTY_USER_SCHEMA,
  V2SetInstanceFeaturesRequest.JSON_PROPERTY_OIDC_TOKEN_EXCHANGE,
  V2SetInstanceFeaturesRequest.JSON_PROPERTY_ACTIONS,
  V2SetInstanceFeaturesRequest.JSON_PROPERTY_IMPROVED_PERFORMANCE,
  V2SetInstanceFeaturesRequest.JSON_PROPERTY_WEB_KEY,
  V2SetInstanceFeaturesRequest.JSON_PROPERTY_DEBUG_OIDC_PARENT_ERROR,
  V2SetInstanceFeaturesRequest.JSON_PROPERTY_OIDC_SINGLE_V1_SESSION_TERMINATION,
  V2SetInstanceFeaturesRequest.JSON_PROPERTY_DISABLE_USER_TOKEN_EVENT,
  V2SetInstanceFeaturesRequest.JSON_PROPERTY_ENABLE_BACK_CHANNEL_LOGOUT,
  V2SetInstanceFeaturesRequest.JSON_PROPERTY_LOGIN_V2,
  V2SetInstanceFeaturesRequest.JSON_PROPERTY_PERMISSION_CHECK_V2
})
@JsonTypeName("v2SetInstanceFeaturesRequest")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class V2SetInstanceFeaturesRequest {
  public static final String JSON_PROPERTY_LOGIN_DEFAULT_ORG = "loginDefaultOrg";
  @javax.annotation.Nullable
  private Boolean loginDefaultOrg;

  public static final String JSON_PROPERTY_OIDC_TRIGGER_INTROSPECTION_PROJECTIONS = "oidcTriggerIntrospectionProjections";
  @javax.annotation.Nullable
  private Boolean oidcTriggerIntrospectionProjections;

  public static final String JSON_PROPERTY_OIDC_LEGACY_INTROSPECTION = "oidcLegacyIntrospection";
  @javax.annotation.Nullable
  private Boolean oidcLegacyIntrospection;

  public static final String JSON_PROPERTY_USER_SCHEMA = "userSchema";
  @javax.annotation.Nullable
  private Boolean userSchema;

  public static final String JSON_PROPERTY_OIDC_TOKEN_EXCHANGE = "oidcTokenExchange";
  @javax.annotation.Nullable
  private Boolean oidcTokenExchange;

  public static final String JSON_PROPERTY_ACTIONS = "actions";
  @javax.annotation.Nullable
  private Boolean actions;

  public static final String JSON_PROPERTY_IMPROVED_PERFORMANCE = "improvedPerformance";
  @javax.annotation.Nullable
  private List<V2ImprovedPerformance> improvedPerformance = new ArrayList<>();

  public static final String JSON_PROPERTY_WEB_KEY = "webKey";
  @javax.annotation.Nullable
  private Boolean webKey;

  public static final String JSON_PROPERTY_DEBUG_OIDC_PARENT_ERROR = "debugOidcParentError";
  @javax.annotation.Nullable
  private Boolean debugOidcParentError;

  public static final String JSON_PROPERTY_OIDC_SINGLE_V1_SESSION_TERMINATION = "oidcSingleV1SessionTermination";
  @javax.annotation.Nullable
  private Boolean oidcSingleV1SessionTermination;

  public static final String JSON_PROPERTY_DISABLE_USER_TOKEN_EVENT = "disableUserTokenEvent";
  @javax.annotation.Nullable
  private Boolean disableUserTokenEvent;

  public static final String JSON_PROPERTY_ENABLE_BACK_CHANNEL_LOGOUT = "enableBackChannelLogout";
  @javax.annotation.Nullable
  private Boolean enableBackChannelLogout;

  public static final String JSON_PROPERTY_LOGIN_V2 = "loginV2";
  @javax.annotation.Nullable
  private V2LoginV2 loginV2;

  public static final String JSON_PROPERTY_PERMISSION_CHECK_V2 = "permissionCheckV2";
  @javax.annotation.Nullable
  private Boolean permissionCheckV2;

  public V2SetInstanceFeaturesRequest() {
  }

  public V2SetInstanceFeaturesRequest loginDefaultOrg(@javax.annotation.Nullable Boolean loginDefaultOrg) {
    
    this.loginDefaultOrg = loginDefaultOrg;
    return this;
  }

  /**
   * The login UI will use the settings of the default org (and not from the instance) if no organization context is set
   * @return loginDefaultOrg
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOGIN_DEFAULT_ORG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getLoginDefaultOrg() {
    return loginDefaultOrg;
  }


  @JsonProperty(JSON_PROPERTY_LOGIN_DEFAULT_ORG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoginDefaultOrg(@javax.annotation.Nullable Boolean loginDefaultOrg) {
    this.loginDefaultOrg = loginDefaultOrg;
  }

  public V2SetInstanceFeaturesRequest oidcTriggerIntrospectionProjections(@javax.annotation.Nullable Boolean oidcTriggerIntrospectionProjections) {
    
    this.oidcTriggerIntrospectionProjections = oidcTriggerIntrospectionProjections;
    return this;
  }

  /**
   * Enable projection triggers during an introspection request. This can act as workaround if there are noticeable consistency issues in the introspection response but can have an impact on performance. We are planning to remove triggers for introspection requests in the future. Please raise an issue if you needed to enable this feature.
   * @return oidcTriggerIntrospectionProjections
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OIDC_TRIGGER_INTROSPECTION_PROJECTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOidcTriggerIntrospectionProjections() {
    return oidcTriggerIntrospectionProjections;
  }


  @JsonProperty(JSON_PROPERTY_OIDC_TRIGGER_INTROSPECTION_PROJECTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOidcTriggerIntrospectionProjections(@javax.annotation.Nullable Boolean oidcTriggerIntrospectionProjections) {
    this.oidcTriggerIntrospectionProjections = oidcTriggerIntrospectionProjections;
  }

  public V2SetInstanceFeaturesRequest oidcLegacyIntrospection(@javax.annotation.Nullable Boolean oidcLegacyIntrospection) {
    
    this.oidcLegacyIntrospection = oidcLegacyIntrospection;
    return this;
  }

  /**
   * We have recently refactored the introspection endpoint for performance reasons. This feature can be used to rollback to the legacy implementation if unexpected bugs arise. Please raise an issue if you needed to enable this feature.
   * @return oidcLegacyIntrospection
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OIDC_LEGACY_INTROSPECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOidcLegacyIntrospection() {
    return oidcLegacyIntrospection;
  }


  @JsonProperty(JSON_PROPERTY_OIDC_LEGACY_INTROSPECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOidcLegacyIntrospection(@javax.annotation.Nullable Boolean oidcLegacyIntrospection) {
    this.oidcLegacyIntrospection = oidcLegacyIntrospection;
  }

  public V2SetInstanceFeaturesRequest userSchema(@javax.annotation.Nullable Boolean userSchema) {
    
    this.userSchema = userSchema;
    return this;
  }

  /**
   * User Schemas allow to manage data schemas of user. If the flag is enabled, you&#39;ll be able to use the new API and its features. Note that it is still in an early stage.
   * @return userSchema
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_SCHEMA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUserSchema() {
    return userSchema;
  }


  @JsonProperty(JSON_PROPERTY_USER_SCHEMA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserSchema(@javax.annotation.Nullable Boolean userSchema) {
    this.userSchema = userSchema;
  }

  public V2SetInstanceFeaturesRequest oidcTokenExchange(@javax.annotation.Nullable Boolean oidcTokenExchange) {
    
    this.oidcTokenExchange = oidcTokenExchange;
    return this;
  }

  /**
   * Enable the experimental &#x60;urn:ietf:params:oauth:grant-type:token-exchange&#x60; grant type for the OIDC token endpoint. Token exchange can be used to request tokens with a lesser scope or impersonate other users. See the security policy to allow impersonation on an instance.
   * @return oidcTokenExchange
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OIDC_TOKEN_EXCHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOidcTokenExchange() {
    return oidcTokenExchange;
  }


  @JsonProperty(JSON_PROPERTY_OIDC_TOKEN_EXCHANGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOidcTokenExchange(@javax.annotation.Nullable Boolean oidcTokenExchange) {
    this.oidcTokenExchange = oidcTokenExchange;
  }

  public V2SetInstanceFeaturesRequest actions(@javax.annotation.Nullable Boolean actions) {
    
    this.actions = actions;
    return this;
  }

  /**
   * Actions allow to manage data executions and targets. If the flag is enabled, you&#39;ll be able to use the new API and its features. Note that it is still in an early stage.
   * @return actions
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getActions() {
    return actions;
  }


  @JsonProperty(JSON_PROPERTY_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActions(@javax.annotation.Nullable Boolean actions) {
    this.actions = actions;
  }

  public V2SetInstanceFeaturesRequest improvedPerformance(@javax.annotation.Nullable List<V2ImprovedPerformance> improvedPerformance) {
    
    this.improvedPerformance = improvedPerformance;
    return this;
  }

  public V2SetInstanceFeaturesRequest addImprovedPerformanceItem(V2ImprovedPerformance improvedPerformanceItem) {
    if (this.improvedPerformance == null) {
      this.improvedPerformance = new ArrayList<>();
    }
    this.improvedPerformance.add(improvedPerformanceItem);
    return this;
  }

  /**
   * Improves performance of specified execution paths.
   * @return improvedPerformance
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IMPROVED_PERFORMANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<V2ImprovedPerformance> getImprovedPerformance() {
    return improvedPerformance;
  }


  @JsonProperty(JSON_PROPERTY_IMPROVED_PERFORMANCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImprovedPerformance(@javax.annotation.Nullable List<V2ImprovedPerformance> improvedPerformance) {
    this.improvedPerformance = improvedPerformance;
  }

  public V2SetInstanceFeaturesRequest webKey(@javax.annotation.Nullable Boolean webKey) {
    
    this.webKey = webKey;
    return this;
  }

  /**
   * Enable the webkey/v3alpha API. The first time this feature is enabled, web keys are generated and activated.
   * @return webKey
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WEB_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getWebKey() {
    return webKey;
  }


  @JsonProperty(JSON_PROPERTY_WEB_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebKey(@javax.annotation.Nullable Boolean webKey) {
    this.webKey = webKey;
  }

  public V2SetInstanceFeaturesRequest debugOidcParentError(@javax.annotation.Nullable Boolean debugOidcParentError) {
    
    this.debugOidcParentError = debugOidcParentError;
    return this;
  }

  /**
   * Return parent errors to OIDC clients for debugging purposes. Parent errors may contain sensitive data or unwanted details about the system status of zitadel. Only enable if really needed.
   * @return debugOidcParentError
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEBUG_OIDC_PARENT_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDebugOidcParentError() {
    return debugOidcParentError;
  }


  @JsonProperty(JSON_PROPERTY_DEBUG_OIDC_PARENT_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDebugOidcParentError(@javax.annotation.Nullable Boolean debugOidcParentError) {
    this.debugOidcParentError = debugOidcParentError;
  }

  public V2SetInstanceFeaturesRequest oidcSingleV1SessionTermination(@javax.annotation.Nullable Boolean oidcSingleV1SessionTermination) {
    
    this.oidcSingleV1SessionTermination = oidcSingleV1SessionTermination;
    return this;
  }

  /**
   * If the flag is enabled, you&#39;ll be able to terminate a single session from the login UI by providing an id_token with a &#x60;sid&#x60; claim as id_token_hint on the end_session endpoint. Note that currently all sessions from the same user agent (browser) are terminated in the login UI. Sessions managed through the Session API already allow the termination of single sessions.
   * @return oidcSingleV1SessionTermination
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OIDC_SINGLE_V1_SESSION_TERMINATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getOidcSingleV1SessionTermination() {
    return oidcSingleV1SessionTermination;
  }


  @JsonProperty(JSON_PROPERTY_OIDC_SINGLE_V1_SESSION_TERMINATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOidcSingleV1SessionTermination(@javax.annotation.Nullable Boolean oidcSingleV1SessionTermination) {
    this.oidcSingleV1SessionTermination = oidcSingleV1SessionTermination;
  }

  public V2SetInstanceFeaturesRequest disableUserTokenEvent(@javax.annotation.Nullable Boolean disableUserTokenEvent) {
    
    this.disableUserTokenEvent = disableUserTokenEvent;
    return this;
  }

  /**
   * Do not push user token meta-event user.token.v2.added to improve performance on many concurrent single (machine-)user logins
   * @return disableUserTokenEvent
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISABLE_USER_TOKEN_EVENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getDisableUserTokenEvent() {
    return disableUserTokenEvent;
  }


  @JsonProperty(JSON_PROPERTY_DISABLE_USER_TOKEN_EVENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisableUserTokenEvent(@javax.annotation.Nullable Boolean disableUserTokenEvent) {
    this.disableUserTokenEvent = disableUserTokenEvent;
  }

  public V2SetInstanceFeaturesRequest enableBackChannelLogout(@javax.annotation.Nullable Boolean enableBackChannelLogout) {
    
    this.enableBackChannelLogout = enableBackChannelLogout;
    return this;
  }

  /**
   * If the flag is enabled, you&#39;ll be able to use the OIDC Back-Channel Logout to be notified in your application about terminated user sessions.
   * @return enableBackChannelLogout
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ENABLE_BACK_CHANNEL_LOGOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEnableBackChannelLogout() {
    return enableBackChannelLogout;
  }


  @JsonProperty(JSON_PROPERTY_ENABLE_BACK_CHANNEL_LOGOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnableBackChannelLogout(@javax.annotation.Nullable Boolean enableBackChannelLogout) {
    this.enableBackChannelLogout = enableBackChannelLogout;
  }

  public V2SetInstanceFeaturesRequest loginV2(@javax.annotation.Nullable V2LoginV2 loginV2) {
    
    this.loginV2 = loginV2;
    return this;
  }

  /**
   * Get loginV2
   * @return loginV2
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOGIN_V2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public V2LoginV2 getLoginV2() {
    return loginV2;
  }


  @JsonProperty(JSON_PROPERTY_LOGIN_V2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoginV2(@javax.annotation.Nullable V2LoginV2 loginV2) {
    this.loginV2 = loginV2;
  }

  public V2SetInstanceFeaturesRequest permissionCheckV2(@javax.annotation.Nullable Boolean permissionCheckV2) {
    
    this.permissionCheckV2 = permissionCheckV2;
    return this;
  }

  /**
   * Enable a newer, more performant, permission check used for v2 and v3 resource based APIs.
   * @return permissionCheckV2
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PERMISSION_CHECK_V2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getPermissionCheckV2() {
    return permissionCheckV2;
  }


  @JsonProperty(JSON_PROPERTY_PERMISSION_CHECK_V2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPermissionCheckV2(@javax.annotation.Nullable Boolean permissionCheckV2) {
    this.permissionCheckV2 = permissionCheckV2;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V2SetInstanceFeaturesRequest v2SetInstanceFeaturesRequest = (V2SetInstanceFeaturesRequest) o;
    return Objects.equals(this.loginDefaultOrg, v2SetInstanceFeaturesRequest.loginDefaultOrg) &&
        Objects.equals(this.oidcTriggerIntrospectionProjections, v2SetInstanceFeaturesRequest.oidcTriggerIntrospectionProjections) &&
        Objects.equals(this.oidcLegacyIntrospection, v2SetInstanceFeaturesRequest.oidcLegacyIntrospection) &&
        Objects.equals(this.userSchema, v2SetInstanceFeaturesRequest.userSchema) &&
        Objects.equals(this.oidcTokenExchange, v2SetInstanceFeaturesRequest.oidcTokenExchange) &&
        Objects.equals(this.actions, v2SetInstanceFeaturesRequest.actions) &&
        Objects.equals(this.improvedPerformance, v2SetInstanceFeaturesRequest.improvedPerformance) &&
        Objects.equals(this.webKey, v2SetInstanceFeaturesRequest.webKey) &&
        Objects.equals(this.debugOidcParentError, v2SetInstanceFeaturesRequest.debugOidcParentError) &&
        Objects.equals(this.oidcSingleV1SessionTermination, v2SetInstanceFeaturesRequest.oidcSingleV1SessionTermination) &&
        Objects.equals(this.disableUserTokenEvent, v2SetInstanceFeaturesRequest.disableUserTokenEvent) &&
        Objects.equals(this.enableBackChannelLogout, v2SetInstanceFeaturesRequest.enableBackChannelLogout) &&
        Objects.equals(this.loginV2, v2SetInstanceFeaturesRequest.loginV2) &&
        Objects.equals(this.permissionCheckV2, v2SetInstanceFeaturesRequest.permissionCheckV2);
  }

  @Override
  public int hashCode() {
    return Objects.hash(loginDefaultOrg, oidcTriggerIntrospectionProjections, oidcLegacyIntrospection, userSchema, oidcTokenExchange, actions, improvedPerformance, webKey, debugOidcParentError, oidcSingleV1SessionTermination, disableUserTokenEvent, enableBackChannelLogout, loginV2, permissionCheckV2);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V2SetInstanceFeaturesRequest {\n");
    sb.append("    loginDefaultOrg: ").append(toIndentedString(loginDefaultOrg)).append("\n");
    sb.append("    oidcTriggerIntrospectionProjections: ").append(toIndentedString(oidcTriggerIntrospectionProjections)).append("\n");
    sb.append("    oidcLegacyIntrospection: ").append(toIndentedString(oidcLegacyIntrospection)).append("\n");
    sb.append("    userSchema: ").append(toIndentedString(userSchema)).append("\n");
    sb.append("    oidcTokenExchange: ").append(toIndentedString(oidcTokenExchange)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("    improvedPerformance: ").append(toIndentedString(improvedPerformance)).append("\n");
    sb.append("    webKey: ").append(toIndentedString(webKey)).append("\n");
    sb.append("    debugOidcParentError: ").append(toIndentedString(debugOidcParentError)).append("\n");
    sb.append("    oidcSingleV1SessionTermination: ").append(toIndentedString(oidcSingleV1SessionTermination)).append("\n");
    sb.append("    disableUserTokenEvent: ").append(toIndentedString(disableUserTokenEvent)).append("\n");
    sb.append("    enableBackChannelLogout: ").append(toIndentedString(enableBackChannelLogout)).append("\n");
    sb.append("    loginV2: ").append(toIndentedString(loginV2)).append("\n");
    sb.append("    permissionCheckV2: ").append(toIndentedString(permissionCheckV2)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `loginDefaultOrg` to the URL query string
    if (getLoginDefaultOrg() != null) {
      try {
        joiner.add(String.format("%sloginDefaultOrg%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLoginDefaultOrg()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `oidcTriggerIntrospectionProjections` to the URL query string
    if (getOidcTriggerIntrospectionProjections() != null) {
      try {
        joiner.add(String.format("%soidcTriggerIntrospectionProjections%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getOidcTriggerIntrospectionProjections()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `oidcLegacyIntrospection` to the URL query string
    if (getOidcLegacyIntrospection() != null) {
      try {
        joiner.add(String.format("%soidcLegacyIntrospection%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getOidcLegacyIntrospection()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `userSchema` to the URL query string
    if (getUserSchema() != null) {
      try {
        joiner.add(String.format("%suserSchema%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getUserSchema()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `oidcTokenExchange` to the URL query string
    if (getOidcTokenExchange() != null) {
      try {
        joiner.add(String.format("%soidcTokenExchange%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getOidcTokenExchange()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `actions` to the URL query string
    if (getActions() != null) {
      try {
        joiner.add(String.format("%sactions%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getActions()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `improvedPerformance` to the URL query string
    if (getImprovedPerformance() != null) {
      for (int i = 0; i < getImprovedPerformance().size(); i++) {
        if (getImprovedPerformance().get(i) != null) {
          try {
            joiner.add(String.format("%simprovedPerformance%s%s=%s", prefix, suffix,
                "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
                URLEncoder.encode(String.valueOf(getImprovedPerformance().get(i)), "UTF-8").replaceAll("\\+", "%20")));
          } catch (UnsupportedEncodingException e) {
            // Should never happen, UTF-8 is always supported
            throw new RuntimeException(e);
          }
        }
      }
    }

    // add `webKey` to the URL query string
    if (getWebKey() != null) {
      try {
        joiner.add(String.format("%swebKey%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getWebKey()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `debugOidcParentError` to the URL query string
    if (getDebugOidcParentError() != null) {
      try {
        joiner.add(String.format("%sdebugOidcParentError%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDebugOidcParentError()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `oidcSingleV1SessionTermination` to the URL query string
    if (getOidcSingleV1SessionTermination() != null) {
      try {
        joiner.add(String.format("%soidcSingleV1SessionTermination%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getOidcSingleV1SessionTermination()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `disableUserTokenEvent` to the URL query string
    if (getDisableUserTokenEvent() != null) {
      try {
        joiner.add(String.format("%sdisableUserTokenEvent%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDisableUserTokenEvent()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `enableBackChannelLogout` to the URL query string
    if (getEnableBackChannelLogout() != null) {
      try {
        joiner.add(String.format("%senableBackChannelLogout%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getEnableBackChannelLogout()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `loginV2` to the URL query string
    if (getLoginV2() != null) {
      joiner.add(getLoginV2().toUrlQueryString(prefix + "loginV2" + suffix));
    }

    // add `permissionCheckV2` to the URL query string
    if (getPermissionCheckV2() != null) {
      try {
        joiner.add(String.format("%spermissionCheckV2%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getPermissionCheckV2()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    return joiner.toString();
  }

}

