/*
 * Zitadel SDK
 * The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zitadel.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * SessionServiceUserFactor
 */
@JsonPropertyOrder({
  SessionServiceUserFactor.JSON_PROPERTY_VERIFIED_AT,
  SessionServiceUserFactor.JSON_PROPERTY_ID,
  SessionServiceUserFactor.JSON_PROPERTY_LOGIN_NAME,
  SessionServiceUserFactor.JSON_PROPERTY_DISPLAY_NAME,
  SessionServiceUserFactor.JSON_PROPERTY_ORGANIZATION_ID
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class SessionServiceUserFactor {
  public static final String JSON_PROPERTY_VERIFIED_AT = "verifiedAt";
  @javax.annotation.Nullable
  private OffsetDateTime verifiedAt;

  public static final String JSON_PROPERTY_ID = "id";
  @javax.annotation.Nullable
  private String id;

  public static final String JSON_PROPERTY_LOGIN_NAME = "loginName";
  @javax.annotation.Nullable
  private String loginName;

  public static final String JSON_PROPERTY_DISPLAY_NAME = "displayName";
  @javax.annotation.Nullable
  private String displayName;

  public static final String JSON_PROPERTY_ORGANIZATION_ID = "organizationId";
  @javax.annotation.Nullable
  private String organizationId;

  public SessionServiceUserFactor() {
  }

  public SessionServiceUserFactor verifiedAt(@javax.annotation.Nullable OffsetDateTime verifiedAt) {
    
    this.verifiedAt = verifiedAt;
    return this;
  }

  /**
   * \&quot;time when the user was last checked\&quot;
   * @return verifiedAt
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERIFIED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getVerifiedAt() {
    return verifiedAt;
  }


  @JsonProperty(JSON_PROPERTY_VERIFIED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVerifiedAt(@javax.annotation.Nullable OffsetDateTime verifiedAt) {
    this.verifiedAt = verifiedAt;
  }

  public SessionServiceUserFactor id(@javax.annotation.Nullable String id) {
    
    this.id = id;
    return this;
  }

  /**
   * \&quot;id of the checked user\&quot;
   * @return id
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }

  public SessionServiceUserFactor loginName(@javax.annotation.Nullable String loginName) {
    
    this.loginName = loginName;
    return this;
  }

  /**
   * \&quot;login name of the checked user\&quot;
   * @return loginName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOGIN_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLoginName() {
    return loginName;
  }


  @JsonProperty(JSON_PROPERTY_LOGIN_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLoginName(@javax.annotation.Nullable String loginName) {
    this.loginName = loginName;
  }

  public SessionServiceUserFactor displayName(@javax.annotation.Nullable String displayName) {
    
    this.displayName = displayName;
    return this;
  }

  /**
   * \&quot;display name of the checked user\&quot;
   * @return displayName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDisplayName() {
    return displayName;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayName(@javax.annotation.Nullable String displayName) {
    this.displayName = displayName;
  }

  public SessionServiceUserFactor organizationId(@javax.annotation.Nullable String organizationId) {
    
    this.organizationId = organizationId;
    return this;
  }

  /**
   * \&quot;organization id of the checked user\&quot;
   * @return organizationId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORGANIZATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOrganizationId() {
    return organizationId;
  }


  @JsonProperty(JSON_PROPERTY_ORGANIZATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrganizationId(@javax.annotation.Nullable String organizationId) {
    this.organizationId = organizationId;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SessionServiceUserFactor sessionServiceUserFactor = (SessionServiceUserFactor) o;
    return Objects.equals(this.verifiedAt, sessionServiceUserFactor.verifiedAt) &&
        Objects.equals(this.id, sessionServiceUserFactor.id) &&
        Objects.equals(this.loginName, sessionServiceUserFactor.loginName) &&
        Objects.equals(this.displayName, sessionServiceUserFactor.displayName) &&
        Objects.equals(this.organizationId, sessionServiceUserFactor.organizationId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(verifiedAt, id, loginName, displayName, organizationId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SessionServiceUserFactor {\n");
    sb.append("    verifiedAt: ").append(toIndentedString(verifiedAt)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    loginName: ").append(toIndentedString(loginName)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `verifiedAt` to the URL query string
    if (getVerifiedAt() != null) {
      try {
        joiner.add(String.format("%sverifiedAt%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getVerifiedAt()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `id` to the URL query string
    if (getId() != null) {
      try {
        joiner.add(String.format("%sid%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `loginName` to the URL query string
    if (getLoginName() != null) {
      try {
        joiner.add(String.format("%sloginName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLoginName()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `displayName` to the URL query string
    if (getDisplayName() != null) {
      try {
        joiner.add(String.format("%sdisplayName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDisplayName()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `organizationId` to the URL query string
    if (getOrganizationId() != null) {
      try {
        joiner.add(String.format("%sorganizationId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getOrganizationId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    return joiner.toString();
  }

}

