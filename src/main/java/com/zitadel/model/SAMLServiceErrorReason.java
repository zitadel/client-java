/*
 * Zitadel SDK
 * The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zitadel.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Gets or Sets SAMLServiceErrorReason
 */
public enum SAMLServiceErrorReason {
  
  ERROR_REASON_UNSPECIFIED("ERROR_REASON_UNSPECIFIED"),
  
  ERROR_REASON_VERSION_MISSMATCH("ERROR_REASON_VERSION_MISSMATCH"),
  
  ERROR_REASON_AUTH_N_FAILED("ERROR_REASON_AUTH_N_FAILED"),
  
  ERROR_REASON_INVALID_ATTR_NAME_OR_VALUE("ERROR_REASON_INVALID_ATTR_NAME_OR_VALUE"),
  
  ERROR_REASON_INVALID_NAMEID_POLICY("ERROR_REASON_INVALID_NAMEID_POLICY"),
  
  ERROR_REASON_REQUEST_DENIED("ERROR_REASON_REQUEST_DENIED"),
  
  ERROR_REASON_REQUEST_UNSUPPORTED("ERROR_REASON_REQUEST_UNSUPPORTED"),
  
  ERROR_REASON_UNSUPPORTED_BINDING("ERROR_REASON_UNSUPPORTED_BINDING");

  private String value;

  SAMLServiceErrorReason(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static SAMLServiceErrorReason fromValue(String value) {
    for (SAMLServiceErrorReason b : SAMLServiceErrorReason.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    if (prefix == null) {
      prefix = "";
    }

    return String.format("%s=%s", prefix, this.toString());
  }
}

