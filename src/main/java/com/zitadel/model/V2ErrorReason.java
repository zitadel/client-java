/*
 * merged spec
 * merged spec
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zitadel.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Gets or Sets v2ErrorReason
 */
public enum V2ErrorReason {
  
  ERROR_REASON_UNSPECIFIED("ERROR_REASON_UNSPECIFIED"),
  
  ERROR_REASON_INVALID_REQUEST("ERROR_REASON_INVALID_REQUEST"),
  
  ERROR_REASON_UNAUTHORIZED_CLIENT("ERROR_REASON_UNAUTHORIZED_CLIENT"),
  
  ERROR_REASON_ACCESS_DENIED("ERROR_REASON_ACCESS_DENIED"),
  
  ERROR_REASON_UNSUPPORTED_RESPONSE_TYPE("ERROR_REASON_UNSUPPORTED_RESPONSE_TYPE"),
  
  ERROR_REASON_INVALID_SCOPE("ERROR_REASON_INVALID_SCOPE"),
  
  ERROR_REASON_SERVER_ERROR("ERROR_REASON_SERVER_ERROR"),
  
  ERROR_REASON_TEMPORARY_UNAVAILABLE("ERROR_REASON_TEMPORARY_UNAVAILABLE"),
  
  ERROR_REASON_INTERACTION_REQUIRED("ERROR_REASON_INTERACTION_REQUIRED"),
  
  ERROR_REASON_LOGIN_REQUIRED("ERROR_REASON_LOGIN_REQUIRED"),
  
  ERROR_REASON_ACCOUNT_SELECTION_REQUIRED("ERROR_REASON_ACCOUNT_SELECTION_REQUIRED"),
  
  ERROR_REASON_CONSENT_REQUIRED("ERROR_REASON_CONSENT_REQUIRED"),
  
  ERROR_REASON_INVALID_REQUEST_URI("ERROR_REASON_INVALID_REQUEST_URI"),
  
  ERROR_REASON_INVALID_REQUEST_OBJECT("ERROR_REASON_INVALID_REQUEST_OBJECT"),
  
  ERROR_REASON_REQUEST_NOT_SUPPORTED("ERROR_REASON_REQUEST_NOT_SUPPORTED"),
  
  ERROR_REASON_REQUEST_URI_NOT_SUPPORTED("ERROR_REASON_REQUEST_URI_NOT_SUPPORTED"),
  
  ERROR_REASON_REGISTRATION_NOT_SUPPORTED("ERROR_REASON_REGISTRATION_NOT_SUPPORTED");

  private String value;

  V2ErrorReason(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static V2ErrorReason fromValue(String value) {
    for (V2ErrorReason b : V2ErrorReason.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    if (prefix == null) {
      prefix = "";
    }

    return String.format("%s=%s", prefix, this.toString());
  }
}

