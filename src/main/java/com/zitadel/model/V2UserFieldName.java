/*
 * Zitadel SDK
 * The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zitadel.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Gets or Sets v2UserFieldName
 */
public enum V2UserFieldName {

  USER_FIELD_NAME_UNSPECIFIED("USER_FIELD_NAME_UNSPECIFIED"),

  USER_FIELD_NAME_USER_NAME("USER_FIELD_NAME_USER_NAME"),

  USER_FIELD_NAME_FIRST_NAME("USER_FIELD_NAME_FIRST_NAME"),

  USER_FIELD_NAME_LAST_NAME("USER_FIELD_NAME_LAST_NAME"),

  USER_FIELD_NAME_NICK_NAME("USER_FIELD_NAME_NICK_NAME"),

  USER_FIELD_NAME_DISPLAY_NAME("USER_FIELD_NAME_DISPLAY_NAME"),

  USER_FIELD_NAME_EMAIL("USER_FIELD_NAME_EMAIL"),

  USER_FIELD_NAME_STATE("USER_FIELD_NAME_STATE"),

  USER_FIELD_NAME_TYPE("USER_FIELD_NAME_TYPE"),

  USER_FIELD_NAME_CREATION_DATE("USER_FIELD_NAME_CREATION_DATE");

  private final String value;

  V2UserFieldName(String value) {
    this.value = value;
  }

  @JsonCreator
  public static V2UserFieldName fromValue(String value) {
    for (V2UserFieldName b : V2UserFieldName.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    if (prefix == null) {
      prefix = "";
    }

    return String.format("%s=%s", prefix, this);
  }
}

