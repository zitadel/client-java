/*
 * merged spec
 * merged spec
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zitadel.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.zitadel.model.V2HashedPassword;
import com.zitadel.model.V2IDPLink;
import com.zitadel.model.V2Organization;
import com.zitadel.model.V2Password;
import com.zitadel.model.V2SetHumanEmail1;
import com.zitadel.model.V2SetHumanPhone1;
import com.zitadel.model.V2SetHumanProfile1;
import com.zitadel.model.V2SetMetadataEntry1;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * V2AddHumanUserRequest1
 */
@JsonPropertyOrder({
  V2AddHumanUserRequest1.JSON_PROPERTY_USER_ID,
  V2AddHumanUserRequest1.JSON_PROPERTY_USERNAME,
  V2AddHumanUserRequest1.JSON_PROPERTY_ORGANIZATION,
  V2AddHumanUserRequest1.JSON_PROPERTY_PROFILE,
  V2AddHumanUserRequest1.JSON_PROPERTY_EMAIL,
  V2AddHumanUserRequest1.JSON_PROPERTY_PHONE,
  V2AddHumanUserRequest1.JSON_PROPERTY_METADATA,
  V2AddHumanUserRequest1.JSON_PROPERTY_PASSWORD,
  V2AddHumanUserRequest1.JSON_PROPERTY_HASHED_PASSWORD,
  V2AddHumanUserRequest1.JSON_PROPERTY_IDP_LINKS,
  V2AddHumanUserRequest1.JSON_PROPERTY_TOTP_SECRET
})
@JsonTypeName("v2AddHumanUserRequest_1")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class V2AddHumanUserRequest1 {
  public static final String JSON_PROPERTY_USER_ID = "userId";
  @javax.annotation.Nullable
  private String userId;

  public static final String JSON_PROPERTY_USERNAME = "username";
  @javax.annotation.Nullable
  private String username;

  public static final String JSON_PROPERTY_ORGANIZATION = "organization";
  @javax.annotation.Nullable
  private V2Organization organization;

  public static final String JSON_PROPERTY_PROFILE = "profile";
  @javax.annotation.Nonnull
  private V2SetHumanProfile1 profile;

  public static final String JSON_PROPERTY_EMAIL = "email";
  @javax.annotation.Nonnull
  private V2SetHumanEmail1 email;

  public static final String JSON_PROPERTY_PHONE = "phone";
  @javax.annotation.Nullable
  private V2SetHumanPhone1 phone;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  @javax.annotation.Nullable
  private List<V2SetMetadataEntry1> metadata = new ArrayList<>();

  public static final String JSON_PROPERTY_PASSWORD = "password";
  @javax.annotation.Nullable
  private V2Password password;

  public static final String JSON_PROPERTY_HASHED_PASSWORD = "hashedPassword";
  @javax.annotation.Nullable
  private V2HashedPassword hashedPassword;

  public static final String JSON_PROPERTY_IDP_LINKS = "idpLinks";
  @javax.annotation.Nullable
  private List<V2IDPLink> idpLinks = new ArrayList<>();

  public static final String JSON_PROPERTY_TOTP_SECRET = "totpSecret";
  @javax.annotation.Nullable
  private String totpSecret;

  public V2AddHumanUserRequest1() {
  }

  public V2AddHumanUserRequest1 userId(@javax.annotation.Nullable String userId) {
    
    this.userId = userId;
    return this;
  }

  /**
   * optionally set your own id unique for the user.
   * @return userId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(@javax.annotation.Nullable String userId) {
    this.userId = userId;
  }

  public V2AddHumanUserRequest1 username(@javax.annotation.Nullable String username) {
    
    this.username = username;
    return this;
  }

  /**
   * optionally set a unique username, if none is provided the email will be used.
   * @return username
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUsername() {
    return username;
  }


  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUsername(@javax.annotation.Nullable String username) {
    this.username = username;
  }

  public V2AddHumanUserRequest1 organization(@javax.annotation.Nullable V2Organization organization) {
    
    this.organization = organization;
    return this;
  }

  /**
   * Get organization
   * @return organization
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public V2Organization getOrganization() {
    return organization;
  }


  @JsonProperty(JSON_PROPERTY_ORGANIZATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrganization(@javax.annotation.Nullable V2Organization organization) {
    this.organization = organization;
  }

  public V2AddHumanUserRequest1 profile(@javax.annotation.Nonnull V2SetHumanProfile1 profile) {
    
    this.profile = profile;
    return this;
  }

  /**
   * Get profile
   * @return profile
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROFILE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public V2SetHumanProfile1 getProfile() {
    return profile;
  }


  @JsonProperty(JSON_PROPERTY_PROFILE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProfile(@javax.annotation.Nonnull V2SetHumanProfile1 profile) {
    this.profile = profile;
  }

  public V2AddHumanUserRequest1 email(@javax.annotation.Nonnull V2SetHumanEmail1 email) {
    
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public V2SetHumanEmail1 getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEmail(@javax.annotation.Nonnull V2SetHumanEmail1 email) {
    this.email = email;
  }

  public V2AddHumanUserRequest1 phone(@javax.annotation.Nullable V2SetHumanPhone1 phone) {
    
    this.phone = phone;
    return this;
  }

  /**
   * Get phone
   * @return phone
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public V2SetHumanPhone1 getPhone() {
    return phone;
  }


  @JsonProperty(JSON_PROPERTY_PHONE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhone(@javax.annotation.Nullable V2SetHumanPhone1 phone) {
    this.phone = phone;
  }

  public V2AddHumanUserRequest1 metadata(@javax.annotation.Nullable List<V2SetMetadataEntry1> metadata) {
    
    this.metadata = metadata;
    return this;
  }

  public V2AddHumanUserRequest1 addMetadataItem(V2SetMetadataEntry1 metadataItem) {
    if (this.metadata == null) {
      this.metadata = new ArrayList<>();
    }
    this.metadata.add(metadataItem);
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<V2SetMetadataEntry1> getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(@javax.annotation.Nullable List<V2SetMetadataEntry1> metadata) {
    this.metadata = metadata;
  }

  public V2AddHumanUserRequest1 password(@javax.annotation.Nullable V2Password password) {
    
    this.password = password;
    return this;
  }

  /**
   * Get password
   * @return password
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public V2Password getPassword() {
    return password;
  }


  @JsonProperty(JSON_PROPERTY_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPassword(@javax.annotation.Nullable V2Password password) {
    this.password = password;
  }

  public V2AddHumanUserRequest1 hashedPassword(@javax.annotation.Nullable V2HashedPassword hashedPassword) {
    
    this.hashedPassword = hashedPassword;
    return this;
  }

  /**
   * Get hashedPassword
   * @return hashedPassword
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HASHED_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public V2HashedPassword getHashedPassword() {
    return hashedPassword;
  }


  @JsonProperty(JSON_PROPERTY_HASHED_PASSWORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHashedPassword(@javax.annotation.Nullable V2HashedPassword hashedPassword) {
    this.hashedPassword = hashedPassword;
  }

  public V2AddHumanUserRequest1 idpLinks(@javax.annotation.Nullable List<V2IDPLink> idpLinks) {
    
    this.idpLinks = idpLinks;
    return this;
  }

  public V2AddHumanUserRequest1 addIdpLinksItem(V2IDPLink idpLinksItem) {
    if (this.idpLinks == null) {
      this.idpLinks = new ArrayList<>();
    }
    this.idpLinks.add(idpLinksItem);
    return this;
  }

  /**
   * Get idpLinks
   * @return idpLinks
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IDP_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<V2IDPLink> getIdpLinks() {
    return idpLinks;
  }


  @JsonProperty(JSON_PROPERTY_IDP_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdpLinks(@javax.annotation.Nullable List<V2IDPLink> idpLinks) {
    this.idpLinks = idpLinks;
  }

  public V2AddHumanUserRequest1 totpSecret(@javax.annotation.Nullable String totpSecret) {
    
    this.totpSecret = totpSecret;
    return this;
  }

  /**
   * An Implementation of RFC 6238 is used, with HMAC-SHA-1 and time-step of 30 seconds. Currently no other options are supported, and if anything different is used the validation will fail.
   * @return totpSecret
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTP_SECRET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTotpSecret() {
    return totpSecret;
  }


  @JsonProperty(JSON_PROPERTY_TOTP_SECRET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotpSecret(@javax.annotation.Nullable String totpSecret) {
    this.totpSecret = totpSecret;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V2AddHumanUserRequest1 v2AddHumanUserRequest1 = (V2AddHumanUserRequest1) o;
    return Objects.equals(this.userId, v2AddHumanUserRequest1.userId) &&
        Objects.equals(this.username, v2AddHumanUserRequest1.username) &&
        Objects.equals(this.organization, v2AddHumanUserRequest1.organization) &&
        Objects.equals(this.profile, v2AddHumanUserRequest1.profile) &&
        Objects.equals(this.email, v2AddHumanUserRequest1.email) &&
        Objects.equals(this.phone, v2AddHumanUserRequest1.phone) &&
        Objects.equals(this.metadata, v2AddHumanUserRequest1.metadata) &&
        Objects.equals(this.password, v2AddHumanUserRequest1.password) &&
        Objects.equals(this.hashedPassword, v2AddHumanUserRequest1.hashedPassword) &&
        Objects.equals(this.idpLinks, v2AddHumanUserRequest1.idpLinks) &&
        Objects.equals(this.totpSecret, v2AddHumanUserRequest1.totpSecret);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, username, organization, profile, email, phone, metadata, password, hashedPassword, idpLinks, totpSecret);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V2AddHumanUserRequest1 {\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    hashedPassword: ").append(toIndentedString(hashedPassword)).append("\n");
    sb.append("    idpLinks: ").append(toIndentedString(idpLinks)).append("\n");
    sb.append("    totpSecret: ").append(toIndentedString(totpSecret)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `userId` to the URL query string
    if (getUserId() != null) {
      try {
        joiner.add(String.format("%suserId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getUserId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `username` to the URL query string
    if (getUsername() != null) {
      try {
        joiner.add(String.format("%susername%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getUsername()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `organization` to the URL query string
    if (getOrganization() != null) {
      joiner.add(getOrganization().toUrlQueryString(prefix + "organization" + suffix));
    }

    // add `profile` to the URL query string
    if (getProfile() != null) {
      joiner.add(getProfile().toUrlQueryString(prefix + "profile" + suffix));
    }

    // add `email` to the URL query string
    if (getEmail() != null) {
      joiner.add(getEmail().toUrlQueryString(prefix + "email" + suffix));
    }

    // add `phone` to the URL query string
    if (getPhone() != null) {
      joiner.add(getPhone().toUrlQueryString(prefix + "phone" + suffix));
    }

    // add `metadata` to the URL query string
    if (getMetadata() != null) {
      for (int i = 0; i < getMetadata().size(); i++) {
        if (getMetadata().get(i) != null) {
          joiner.add(getMetadata().get(i).toUrlQueryString(String.format("%smetadata%s%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `password` to the URL query string
    if (getPassword() != null) {
      joiner.add(getPassword().toUrlQueryString(prefix + "password" + suffix));
    }

    // add `hashedPassword` to the URL query string
    if (getHashedPassword() != null) {
      joiner.add(getHashedPassword().toUrlQueryString(prefix + "hashedPassword" + suffix));
    }

    // add `idpLinks` to the URL query string
    if (getIdpLinks() != null) {
      for (int i = 0; i < getIdpLinks().size(); i++) {
        if (getIdpLinks().get(i) != null) {
          joiner.add(getIdpLinks().get(i).toUrlQueryString(String.format("%sidpLinks%s%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix))));
        }
      }
    }

    // add `totpSecret` to the URL query string
    if (getTotpSecret() != null) {
      try {
        joiner.add(String.format("%stotpSecret%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTotpSecret()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    return joiner.toString();
  }

}

