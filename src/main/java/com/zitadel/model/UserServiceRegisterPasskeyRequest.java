/*
 * Zitadel SDK
 * The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zitadel.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.zitadel.model.UserServicePasskeyAuthenticator;
import com.zitadel.model.UserServicePasskeyRegistrationCode;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * UserServiceRegisterPasskeyRequest
 */
@JsonPropertyOrder({
  UserServiceRegisterPasskeyRequest.JSON_PROPERTY_CODE,
  UserServiceRegisterPasskeyRequest.JSON_PROPERTY_AUTHENTICATOR,
  UserServiceRegisterPasskeyRequest.JSON_PROPERTY_DOMAIN
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class UserServiceRegisterPasskeyRequest {
  public static final String JSON_PROPERTY_CODE = "code";
  @javax.annotation.Nullable
  private UserServicePasskeyRegistrationCode code;

  public static final String JSON_PROPERTY_AUTHENTICATOR = "authenticator";
  @javax.annotation.Nullable
  private UserServicePasskeyAuthenticator authenticator = UserServicePasskeyAuthenticator.PASSKEY_AUTHENTICATOR_UNSPECIFIED;

  public static final String JSON_PROPERTY_DOMAIN = "domain";
  @javax.annotation.Nullable
  private String domain;

  public UserServiceRegisterPasskeyRequest() {
  }

  public UserServiceRegisterPasskeyRequest code(@javax.annotation.Nullable UserServicePasskeyRegistrationCode code) {
    
    this.code = code;
    return this;
  }

  /**
   * Get code
   * @return code
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UserServicePasskeyRegistrationCode getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(@javax.annotation.Nullable UserServicePasskeyRegistrationCode code) {
    this.code = code;
  }

  public UserServiceRegisterPasskeyRequest authenticator(@javax.annotation.Nullable UserServicePasskeyAuthenticator authenticator) {
    
    this.authenticator = authenticator;
    return this;
  }

  /**
   * Get authenticator
   * @return authenticator
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AUTHENTICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UserServicePasskeyAuthenticator getAuthenticator() {
    return authenticator;
  }


  @JsonProperty(JSON_PROPERTY_AUTHENTICATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAuthenticator(@javax.annotation.Nullable UserServicePasskeyAuthenticator authenticator) {
    this.authenticator = authenticator;
  }

  public UserServiceRegisterPasskeyRequest domain(@javax.annotation.Nullable String domain) {
    
    this.domain = domain;
    return this;
  }

  /**
   * \&quot;Domain on which the user is authenticated.\&quot;
   * @return domain
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDomain() {
    return domain;
  }


  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomain(@javax.annotation.Nullable String domain) {
    this.domain = domain;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserServiceRegisterPasskeyRequest userServiceRegisterPasskeyRequest = (UserServiceRegisterPasskeyRequest) o;
    return Objects.equals(this.code, userServiceRegisterPasskeyRequest.code) &&
        Objects.equals(this.authenticator, userServiceRegisterPasskeyRequest.authenticator) &&
        Objects.equals(this.domain, userServiceRegisterPasskeyRequest.domain);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, authenticator, domain);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserServiceRegisterPasskeyRequest {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    authenticator: ").append(toIndentedString(authenticator)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `code` to the URL query string
    if (getCode() != null) {
      joiner.add(getCode().toUrlQueryString(prefix + "code" + suffix));
    }

    // add `authenticator` to the URL query string
    if (getAuthenticator() != null) {
      try {
        joiner.add(String.format("%sauthenticator%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getAuthenticator()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `domain` to the URL query string
    if (getDomain() != null) {
      try {
        joiner.add(String.format("%sdomain%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getDomain()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    return joiner.toString();
  }

}

