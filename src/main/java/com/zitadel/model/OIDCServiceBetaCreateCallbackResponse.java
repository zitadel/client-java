/*
 * Zitadel SDK
 * The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zitadel.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.zitadel.model.OIDCServiceBetaDetails;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * OIDCServiceBetaCreateCallbackResponse
 */
@JsonPropertyOrder({
  OIDCServiceBetaCreateCallbackResponse.JSON_PROPERTY_DETAILS,
  OIDCServiceBetaCreateCallbackResponse.JSON_PROPERTY_CALLBACK_URL
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class OIDCServiceBetaCreateCallbackResponse {
  public static final String JSON_PROPERTY_DETAILS = "details";
  @javax.annotation.Nullable
  private OIDCServiceBetaDetails details;

  public static final String JSON_PROPERTY_CALLBACK_URL = "callbackUrl";
  @javax.annotation.Nullable
  private String callbackUrl;

  public OIDCServiceBetaCreateCallbackResponse() {
  }

  public OIDCServiceBetaCreateCallbackResponse details(@javax.annotation.Nullable OIDCServiceBetaDetails details) {
    
    this.details = details;
    return this;
  }

  /**
   * Get details
   * @return details
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OIDCServiceBetaDetails getDetails() {
    return details;
  }


  @JsonProperty(JSON_PROPERTY_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDetails(@javax.annotation.Nullable OIDCServiceBetaDetails details) {
    this.details = details;
  }

  public OIDCServiceBetaCreateCallbackResponse callbackUrl(@javax.annotation.Nullable String callbackUrl) {
    
    this.callbackUrl = callbackUrl;
    return this;
  }

  /**
   * Callback URL where the user should be redirected, using a \&quot;302 FOUND\&quot; status. Contains details for the application to obtain the tokens on success, or error details on failure. Note that this field must be treated as credentials, as the contained code can be used to obtain tokens on behalve of the user.
   * @return callbackUrl
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CALLBACK_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCallbackUrl() {
    return callbackUrl;
  }


  @JsonProperty(JSON_PROPERTY_CALLBACK_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCallbackUrl(@javax.annotation.Nullable String callbackUrl) {
    this.callbackUrl = callbackUrl;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OIDCServiceBetaCreateCallbackResponse oiDCServiceBetaCreateCallbackResponse = (OIDCServiceBetaCreateCallbackResponse) o;
    return Objects.equals(this.details, oiDCServiceBetaCreateCallbackResponse.details) &&
        Objects.equals(this.callbackUrl, oiDCServiceBetaCreateCallbackResponse.callbackUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(details, callbackUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OIDCServiceBetaCreateCallbackResponse {\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    callbackUrl: ").append(toIndentedString(callbackUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `details` to the URL query string
    if (getDetails() != null) {
      joiner.add(getDetails().toUrlQueryString(prefix + "details" + suffix));
    }

    // add `callbackUrl` to the URL query string
    if (getCallbackUrl() != null) {
      try {
        joiner.add(String.format("%scallbackUrl%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCallbackUrl()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    return joiner.toString();
  }

}

