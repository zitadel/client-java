/*
 * Zitadel SDK
 * The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zitadel.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Gets or Sets v2IdentityProviderType
 */
public enum V2IdentityProviderType {

  IDENTITY_PROVIDER_TYPE_UNSPECIFIED("IDENTITY_PROVIDER_TYPE_UNSPECIFIED"),

  IDENTITY_PROVIDER_TYPE_OIDC("IDENTITY_PROVIDER_TYPE_OIDC"),

  IDENTITY_PROVIDER_TYPE_JWT("IDENTITY_PROVIDER_TYPE_JWT"),

  IDENTITY_PROVIDER_TYPE_LDAP("IDENTITY_PROVIDER_TYPE_LDAP"),

  IDENTITY_PROVIDER_TYPE_OAUTH("IDENTITY_PROVIDER_TYPE_OAUTH"),

  IDENTITY_PROVIDER_TYPE_AZURE_AD("IDENTITY_PROVIDER_TYPE_AZURE_AD"),

  IDENTITY_PROVIDER_TYPE_GITHUB("IDENTITY_PROVIDER_TYPE_GITHUB"),

  IDENTITY_PROVIDER_TYPE_GITHUB_ES("IDENTITY_PROVIDER_TYPE_GITHUB_ES"),

  IDENTITY_PROVIDER_TYPE_GITLAB("IDENTITY_PROVIDER_TYPE_GITLAB"),

  IDENTITY_PROVIDER_TYPE_GITLAB_SELF_HOSTED("IDENTITY_PROVIDER_TYPE_GITLAB_SELF_HOSTED"),

  IDENTITY_PROVIDER_TYPE_GOOGLE("IDENTITY_PROVIDER_TYPE_GOOGLE"),

  IDENTITY_PROVIDER_TYPE_SAML("IDENTITY_PROVIDER_TYPE_SAML"),

  IDENTITY_PROVIDER_TYPE_APPLE("IDENTITY_PROVIDER_TYPE_APPLE");

  private final String value;

  V2IdentityProviderType(String value) {
    this.value = value;
  }

  @JsonCreator
  public static V2IdentityProviderType fromValue(String value) {
    for (V2IdentityProviderType b : V2IdentityProviderType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    if (prefix == null) {
      prefix = "";
    }

    return String.format("%s=%s", prefix, this);
  }
}

