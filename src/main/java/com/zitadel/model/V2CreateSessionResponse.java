/*
 * Zitadel SDK
 * The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zitadel.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.Objects;
import java.util.StringJoiner;

/**
 * V2CreateSessionResponse
 */
@JsonPropertyOrder({
  V2CreateSessionResponse.JSON_PROPERTY_DETAILS,
  V2CreateSessionResponse.JSON_PROPERTY_SESSION_ID,
  V2CreateSessionResponse.JSON_PROPERTY_SESSION_TOKEN,
  V2CreateSessionResponse.JSON_PROPERTY_CHALLENGES
})
@JsonTypeName("v2CreateSessionResponse")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class V2CreateSessionResponse {
  public static final String JSON_PROPERTY_DETAILS = "details";
  public static final String JSON_PROPERTY_SESSION_ID = "sessionId";
  public static final String JSON_PROPERTY_SESSION_TOKEN = "sessionToken";
  public static final String JSON_PROPERTY_CHALLENGES = "challenges";
  @javax.annotation.Nullable
  private V2Details details;
  @javax.annotation.Nullable
  private String sessionId;
  @javax.annotation.Nullable
  private String sessionToken;
  @javax.annotation.Nullable
  private V2Challenges challenges;

  public V2CreateSessionResponse() {
  }

  public V2CreateSessionResponse details(@javax.annotation.Nullable V2Details details) {

    this.details = details;
    return this;
  }

  /**
   * Get details
   *
   * @return details
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public V2Details getDetails() {
    return details;
  }


  @JsonProperty(JSON_PROPERTY_DETAILS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDetails(@javax.annotation.Nullable V2Details details) {
    this.details = details;
  }

  public V2CreateSessionResponse sessionId(@javax.annotation.Nullable String sessionId) {

    this.sessionId = sessionId;
    return this;
  }

  /**
   * \&quot;id of the session\&quot;
   *
   * @return sessionId
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSessionId() {
    return sessionId;
  }


  @JsonProperty(JSON_PROPERTY_SESSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSessionId(@javax.annotation.Nullable String sessionId) {
    this.sessionId = sessionId;
  }

  public V2CreateSessionResponse sessionToken(@javax.annotation.Nullable String sessionToken) {

    this.sessionToken = sessionToken;
    return this;
  }

  /**
   * \&quot;The current token of the session, which is required for delete session, get session or the request of other resources.\&quot;
   *
   * @return sessionToken
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SESSION_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSessionToken() {
    return sessionToken;
  }


  @JsonProperty(JSON_PROPERTY_SESSION_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSessionToken(@javax.annotation.Nullable String sessionToken) {
    this.sessionToken = sessionToken;
  }

  public V2CreateSessionResponse challenges(@javax.annotation.Nullable V2Challenges challenges) {

    this.challenges = challenges;
    return this;
  }

  /**
   * Get challenges
   *
   * @return challenges
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHALLENGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public V2Challenges getChallenges() {
    return challenges;
  }


  @JsonProperty(JSON_PROPERTY_CHALLENGES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChallenges(@javax.annotation.Nullable V2Challenges challenges) {
    this.challenges = challenges;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V2CreateSessionResponse v2CreateSessionResponse = (V2CreateSessionResponse) o;
    return Objects.equals(this.details, v2CreateSessionResponse.details) &&
      Objects.equals(this.sessionId, v2CreateSessionResponse.sessionId) &&
      Objects.equals(this.sessionToken, v2CreateSessionResponse.sessionToken) &&
      Objects.equals(this.challenges, v2CreateSessionResponse.challenges);
  }

  @Override
  public int hashCode() {
    return Objects.hash(details, sessionId, sessionToken, challenges);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V2CreateSessionResponse {\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    sessionId: ").append(toIndentedString(sessionId)).append("\n");
    sb.append("    sessionToken: ").append(toIndentedString(sessionToken)).append("\n");
    sb.append("    challenges: ").append(toIndentedString(challenges)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `details` to the URL query string
    if (getDetails() != null) {
      joiner.add(getDetails().toUrlQueryString(prefix + "details" + suffix));
    }

    // add `sessionId` to the URL query string
    if (getSessionId() != null) {
      try {
        joiner.add(String.format("%ssessionId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSessionId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `sessionToken` to the URL query string
    if (getSessionToken() != null) {
      try {
        joiner.add(String.format("%ssessionToken%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSessionToken()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `challenges` to the URL query string
    if (getChallenges() != null) {
      joiner.add(getChallenges().toUrlQueryString(prefix + "challenges" + suffix));
    }

    return joiner.toString();
  }

}

