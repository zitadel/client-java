/*
 * Zitadel SDK
 * The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zitadel.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.zitadel.model.ActionServiceBetaTextFilterMethod;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * ActionServiceBetaTargetNameFilter
 */
@JsonPropertyOrder({
  ActionServiceBetaTargetNameFilter.JSON_PROPERTY_TARGET_NAME,
  ActionServiceBetaTargetNameFilter.JSON_PROPERTY_METHOD
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class ActionServiceBetaTargetNameFilter {
  public static final String JSON_PROPERTY_TARGET_NAME = "targetName";
  @javax.annotation.Nullable
  private String targetName;

  public static final String JSON_PROPERTY_METHOD = "method";
  @javax.annotation.Nullable
  private ActionServiceBetaTextFilterMethod method = ActionServiceBetaTextFilterMethod.TEXT_FILTER_METHOD_EQUALS;

  public ActionServiceBetaTargetNameFilter() {
  }

  public ActionServiceBetaTargetNameFilter targetName(@javax.annotation.Nullable String targetName) {
    
    this.targetName = targetName;
    return this;
  }

  /**
   * Defines the name of the target to query for.
   * @return targetName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TARGET_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTargetName() {
    return targetName;
  }


  @JsonProperty(JSON_PROPERTY_TARGET_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTargetName(@javax.annotation.Nullable String targetName) {
    this.targetName = targetName;
  }

  public ActionServiceBetaTargetNameFilter method(@javax.annotation.Nullable ActionServiceBetaTextFilterMethod method) {
    
    this.method = method;
    return this;
  }

  /**
   * Get method
   * @return method
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ActionServiceBetaTextFilterMethod getMethod() {
    return method;
  }


  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMethod(@javax.annotation.Nullable ActionServiceBetaTextFilterMethod method) {
    this.method = method;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActionServiceBetaTargetNameFilter actionServiceBetaTargetNameFilter = (ActionServiceBetaTargetNameFilter) o;
    return Objects.equals(this.targetName, actionServiceBetaTargetNameFilter.targetName) &&
        Objects.equals(this.method, actionServiceBetaTargetNameFilter.method);
  }

  @Override
  public int hashCode() {
    return Objects.hash(targetName, method);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActionServiceBetaTargetNameFilter {\n");
    sb.append("    targetName: ").append(toIndentedString(targetName)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `targetName` to the URL query string
    if (getTargetName() != null) {
      try {
        joiner.add(String.format("%stargetName%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getTargetName()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `method` to the URL query string
    if (getMethod() != null) {
      try {
        joiner.add(String.format("%smethod%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMethod()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    return joiner.toString();
  }

}

