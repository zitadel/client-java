/*
 * Zitadel SDK
 * The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zitadel.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.zitadel.model.FeatureServiceBetaImprovedPerformance;
import com.zitadel.model.FeatureServiceBetaSource;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.StringJoiner;

/**
 * FeatureServiceBetaImprovedPerformanceFeatureFlag
 */
@JsonPropertyOrder({
  FeatureServiceBetaImprovedPerformanceFeatureFlag.JSON_PROPERTY_EXECUTION_PATHS,
  FeatureServiceBetaImprovedPerformanceFeatureFlag.JSON_PROPERTY_SOURCE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.12.0")
public class FeatureServiceBetaImprovedPerformanceFeatureFlag {
  public static final String JSON_PROPERTY_EXECUTION_PATHS = "executionPaths";
  @javax.annotation.Nullable
  private List<FeatureServiceBetaImprovedPerformance> executionPaths = new ArrayList<>();

  public static final String JSON_PROPERTY_SOURCE = "source";
  @javax.annotation.Nullable
  private FeatureServiceBetaSource source = FeatureServiceBetaSource.SOURCE_UNSPECIFIED;

  public FeatureServiceBetaImprovedPerformanceFeatureFlag() {
  }

  public FeatureServiceBetaImprovedPerformanceFeatureFlag executionPaths(@javax.annotation.Nullable List<FeatureServiceBetaImprovedPerformance> executionPaths) {
    
    this.executionPaths = executionPaths;
    return this;
  }

  public FeatureServiceBetaImprovedPerformanceFeatureFlag addExecutionPathsItem(FeatureServiceBetaImprovedPerformance executionPathsItem) {
    if (this.executionPaths == null) {
      this.executionPaths = new ArrayList<>();
    }
    this.executionPaths.add(executionPathsItem);
    return this;
  }

  /**
   * Which of the performance improvements is enabled
   * @return executionPaths
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXECUTION_PATHS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<FeatureServiceBetaImprovedPerformance> getExecutionPaths() {
    return executionPaths;
  }


  @JsonProperty(JSON_PROPERTY_EXECUTION_PATHS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExecutionPaths(@javax.annotation.Nullable List<FeatureServiceBetaImprovedPerformance> executionPaths) {
    this.executionPaths = executionPaths;
  }

  public FeatureServiceBetaImprovedPerformanceFeatureFlag source(@javax.annotation.Nullable FeatureServiceBetaSource source) {
    
    this.source = source;
    return this;
  }

  /**
   * Get source
   * @return source
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FeatureServiceBetaSource getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSource(@javax.annotation.Nullable FeatureServiceBetaSource source) {
    this.source = source;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FeatureServiceBetaImprovedPerformanceFeatureFlag featureServiceBetaImprovedPerformanceFeatureFlag = (FeatureServiceBetaImprovedPerformanceFeatureFlag) o;
    return Objects.equals(this.executionPaths, featureServiceBetaImprovedPerformanceFeatureFlag.executionPaths) &&
        Objects.equals(this.source, featureServiceBetaImprovedPerformanceFeatureFlag.source);
  }

  @Override
  public int hashCode() {
    return Objects.hash(executionPaths, source);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FeatureServiceBetaImprovedPerformanceFeatureFlag {\n");
    sb.append("    executionPaths: ").append(toIndentedString(executionPaths)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `executionPaths` to the URL query string
    if (getExecutionPaths() != null) {
      for (int i = 0; i < getExecutionPaths().size(); i++) {
        if (getExecutionPaths().get(i) != null) {
          try {
            joiner.add(String.format("%sexecutionPaths%s%s=%s", prefix, suffix,
                "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
                URLEncoder.encode(String.valueOf(getExecutionPaths().get(i)), "UTF-8").replaceAll("\\+", "%20")));
          } catch (UnsupportedEncodingException e) {
            // Should never happen, UTF-8 is always supported
            throw new RuntimeException(e);
          }
        }
      }
    }

    // add `source` to the URL query string
    if (getSource() != null) {
      try {
        joiner.add(String.format("%ssource%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSource()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    return joiner.toString();
  }

}

