/*
 * merged spec
 * merged spec
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zitadel.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.zitadel.model.V2AndQuery;
import com.zitadel.model.V2DisplayNameQuery;
import com.zitadel.model.V2EmailQuery;
import com.zitadel.model.V2FirstNameQuery;
import com.zitadel.model.V2InUserEmailsQuery;
import com.zitadel.model.V2InUserIDQuery;
import com.zitadel.model.V2LastNameQuery;
import com.zitadel.model.V2LoginNameQuery;
import com.zitadel.model.V2NickNameQuery;
import com.zitadel.model.V2NotQuery;
import com.zitadel.model.V2OrQuery;
import com.zitadel.model.V2OrganizationIdQuery;
import com.zitadel.model.V2PhoneQuery;
import com.zitadel.model.V2StateQuery;
import com.zitadel.model.V2TypeQuery;
import com.zitadel.model.V2UserNameQuery;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for V2SearchQuery1
 */
class V2SearchQuery1Test {
    private final V2SearchQuery1 model = new V2SearchQuery1();

    /**
     * Model tests for V2SearchQuery1
     */
    @Test
    void testV2SearchQuery1() {
        // TODO: test V2SearchQuery1
    }

    /**
     * Test the property 'userNameQuery'
     */
    @Test
    void userNameQueryTest() {
        // TODO: test userNameQuery
    }

    /**
     * Test the property 'firstNameQuery'
     */
    @Test
    void firstNameQueryTest() {
        // TODO: test firstNameQuery
    }

    /**
     * Test the property 'lastNameQuery'
     */
    @Test
    void lastNameQueryTest() {
        // TODO: test lastNameQuery
    }

    /**
     * Test the property 'nickNameQuery'
     */
    @Test
    void nickNameQueryTest() {
        // TODO: test nickNameQuery
    }

    /**
     * Test the property 'displayNameQuery'
     */
    @Test
    void displayNameQueryTest() {
        // TODO: test displayNameQuery
    }

    /**
     * Test the property 'emailQuery'
     */
    @Test
    void emailQueryTest() {
        // TODO: test emailQuery
    }

    /**
     * Test the property 'stateQuery'
     */
    @Test
    void stateQueryTest() {
        // TODO: test stateQuery
    }

    /**
     * Test the property 'typeQuery'
     */
    @Test
    void typeQueryTest() {
        // TODO: test typeQuery
    }

    /**
     * Test the property 'loginNameQuery'
     */
    @Test
    void loginNameQueryTest() {
        // TODO: test loginNameQuery
    }

    /**
     * Test the property 'inUserIdsQuery'
     */
    @Test
    void inUserIdsQueryTest() {
        // TODO: test inUserIdsQuery
    }

    /**
     * Test the property 'orQuery'
     */
    @Test
    void orQueryTest() {
        // TODO: test orQuery
    }

    /**
     * Test the property 'andQuery'
     */
    @Test
    void andQueryTest() {
        // TODO: test andQuery
    }

    /**
     * Test the property 'notQuery'
     */
    @Test
    void notQueryTest() {
        // TODO: test notQuery
    }

    /**
     * Test the property 'inUserEmailsQuery'
     */
    @Test
    void inUserEmailsQueryTest() {
        // TODO: test inUserEmailsQuery
    }

    /**
     * Test the property 'organizationIdQuery'
     */
    @Test
    void organizationIdQueryTest() {
        // TODO: test organizationIdQuery
    }

    /**
     * Test the property 'phoneQuery'
     */
    @Test
    void phoneQueryTest() {
        // TODO: test phoneQuery
    }

}
