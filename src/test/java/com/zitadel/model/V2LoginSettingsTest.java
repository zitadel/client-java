/*
 * merged spec
 * merged spec
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zitadel.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.zitadel.model.V2MultiFactorType;
import com.zitadel.model.V2PasskeysType;
import com.zitadel.model.V2ResourceOwnerType;
import com.zitadel.model.V2SecondFactorType;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for V2LoginSettings
 */
class V2LoginSettingsTest {
    private final V2LoginSettings model = new V2LoginSettings();

    /**
     * Model tests for V2LoginSettings
     */
    @Test
    void testV2LoginSettings() {
        // TODO: test V2LoginSettings
    }

    /**
     * Test the property 'allowUsernamePassword'
     */
    @Test
    void allowUsernamePasswordTest() {
        // TODO: test allowUsernamePassword
    }

    /**
     * Test the property 'allowRegister'
     */
    @Test
    void allowRegisterTest() {
        // TODO: test allowRegister
    }

    /**
     * Test the property 'allowExternalIdp'
     */
    @Test
    void allowExternalIdpTest() {
        // TODO: test allowExternalIdp
    }

    /**
     * Test the property 'forceMfa'
     */
    @Test
    void forceMfaTest() {
        // TODO: test forceMfa
    }

    /**
     * Test the property 'passkeysType'
     */
    @Test
    void passkeysTypeTest() {
        // TODO: test passkeysType
    }

    /**
     * Test the property 'hidePasswordReset'
     */
    @Test
    void hidePasswordResetTest() {
        // TODO: test hidePasswordReset
    }

    /**
     * Test the property 'ignoreUnknownUsernames'
     */
    @Test
    void ignoreUnknownUsernamesTest() {
        // TODO: test ignoreUnknownUsernames
    }

    /**
     * Test the property 'defaultRedirectUri'
     */
    @Test
    void defaultRedirectUriTest() {
        // TODO: test defaultRedirectUri
    }

    /**
     * Test the property 'passwordCheckLifetime'
     */
    @Test
    void passwordCheckLifetimeTest() {
        // TODO: test passwordCheckLifetime
    }

    /**
     * Test the property 'externalLoginCheckLifetime'
     */
    @Test
    void externalLoginCheckLifetimeTest() {
        // TODO: test externalLoginCheckLifetime
    }

    /**
     * Test the property 'mfaInitSkipLifetime'
     */
    @Test
    void mfaInitSkipLifetimeTest() {
        // TODO: test mfaInitSkipLifetime
    }

    /**
     * Test the property 'secondFactorCheckLifetime'
     */
    @Test
    void secondFactorCheckLifetimeTest() {
        // TODO: test secondFactorCheckLifetime
    }

    /**
     * Test the property 'multiFactorCheckLifetime'
     */
    @Test
    void multiFactorCheckLifetimeTest() {
        // TODO: test multiFactorCheckLifetime
    }

    /**
     * Test the property 'secondFactors'
     */
    @Test
    void secondFactorsTest() {
        // TODO: test secondFactors
    }

    /**
     * Test the property 'multiFactors'
     */
    @Test
    void multiFactorsTest() {
        // TODO: test multiFactors
    }

    /**
     * Test the property 'allowDomainDiscovery'
     */
    @Test
    void allowDomainDiscoveryTest() {
        // TODO: test allowDomainDiscovery
    }

    /**
     * Test the property 'disableLoginWithEmail'
     */
    @Test
    void disableLoginWithEmailTest() {
        // TODO: test disableLoginWithEmail
    }

    /**
     * Test the property 'disableLoginWithPhone'
     */
    @Test
    void disableLoginWithPhoneTest() {
        // TODO: test disableLoginWithPhone
    }

    /**
     * Test the property 'resourceOwnerType'
     */
    @Test
    void resourceOwnerTypeTest() {
        // TODO: test resourceOwnerType
    }

    /**
     * Test the property 'forceMfaLocalOnly'
     */
    @Test
    void forceMfaLocalOnlyTest() {
        // TODO: test forceMfaLocalOnly
    }

}
