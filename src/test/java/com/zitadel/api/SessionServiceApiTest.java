/*
 * OpenAI API
 * merged spec
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.zitadel.api;

import com.zitadel.ApiException;
import com.zitadel.model.RpcStatus;
import com.zitadel.model.SessionServiceDeleteSessionBody;
import com.zitadel.model.SessionServiceSetSessionBody;
import com.zitadel.model.V2CreateSessionRequest;
import com.zitadel.model.V2CreateSessionResponse;
import com.zitadel.model.V2DeleteSessionResponse;
import com.zitadel.model.V2GetSessionResponse;
import com.zitadel.model.V2ListSessionsRequest;
import com.zitadel.model.V2ListSessionsResponse;
import com.zitadel.model.V2SetSessionResponse;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SessionServiceApi
 */
@Disabled
public class SessionServiceApiTest {

    private final SessionServiceApi api = new SessionServiceApi();

    /**
     * Create a new session
     *
     * Create a new session. A token will be returned, which is required for further updates of the session.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSessionTest() throws ApiException {
        V2CreateSessionRequest body = null;
        V2CreateSessionResponse response = api.createSession(body);

        // TODO: test validations
    }
    /**
     * Terminate an existing session
     *
     * Terminate your own session or if granted any other session.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSessionTest() throws ApiException {
        String sessionId = null;
        SessionServiceDeleteSessionBody body = null;
        V2DeleteSessionResponse response = api.deleteSession(sessionId, body);

        // TODO: test validations
    }
    /**
     * Get a session
     *
     * Get a session and all its information like the time of the user or password verification
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSessionTest() throws ApiException {
        String sessionId = null;
        String sessionToken = null;
        V2GetSessionResponse response = api.getSession(sessionId, sessionToken);

        // TODO: test validations
    }
    /**
     * Search sessions
     *
     * Search for sessions
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listSessionsTest() throws ApiException {
        V2ListSessionsRequest body = null;
        V2ListSessionsResponse response = api.listSessions(body);

        // TODO: test validations
    }
    /**
     * Update an existing session
     *
     * Update an existing session with new information.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setSessionTest() throws ApiException {
        String sessionId = null;
        SessionServiceSetSessionBody body = null;
        V2SetSessionResponse response = api.setSession(sessionId, body);

        // TODO: test validations
    }
}
